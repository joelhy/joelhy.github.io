<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Carpe Diem.</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://joelhy.github.io/"/>
  <updated>2017-05-18T02:13:11.000Z</updated>
  <id>http://joelhy.github.io/</id>
  
  <author>
    <name>joelhy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的MBP基础软件安装记录</title>
    <link href="http://joelhy.github.io/2017/05/18/MBP-software-install/"/>
    <id>http://joelhy.github.io/2017/05/18/MBP-software-install/</id>
    <published>2017-05-18T00:51:24.000Z</published>
    <updated>2017-05-18T02:13:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul>
<li>Tracepad<ul>
<li>启用 Tap to click</li>
<li>启用 三指移动窗口</li>
</ul>
</li>
<li>Screensaver -&gt; Hot corner<ul>
<li>右上角关闭显示屏</li>
<li>右下角启动屏保</li>
</ul>
</li>
<li>Security &amp; Privacy -&gt; General -&gt; Lock Screen<ul>
<li>时间改为5秒</li>
</ul>
</li>
<li>iTerm2<ul>
<li>背景改成半透明</li>
</ul>
</li>
<li>Geany</li>
</ul>
<h2 id="基础软件安装"><a href="#基础软件安装" class="headerlink" title="基础软件安装"></a>基础软件安装</h2><h3 id="从-AppStore-安装"><a href="#从-AppStore-安装" class="headerlink" title="从 AppStore 安装"></a>从 AppStore 安装</h3><ul>
<li>QQ</li>
<li>WeChat</li>
</ul>
<h3 id="从官网安装"><a href="#从官网安装" class="headerlink" title="从官网安装"></a>从官网安装</h3><ul>
<li>搜狗拼音输入法</li>
<li>Homebrew<ul>
<li>/usr/bin/ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install" target="_blank" rel="external">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</li>
</ul>
</li>
<li>Homebrew-Cask<ul>
<li>brew tap caskroom/cask</li>
</ul>
</li>
<li>PHPStorm</li>
<li>DataGrip</li>
</ul>
<h3 id="从第三方安装"><a href="#从第三方安装" class="headerlink" title="从第三方安装"></a>从第三方安装</h3><p>Microsoft Office 2016</p>
<h3 id="从-Homebrew-安装"><a href="#从-Homebrew-安装" class="headerlink" title="从 Homebrew 安装"></a>从 Homebrew 安装</h3><ul>
<li>brew install wget</li>
<li>brew install tree</li>
<li>brew install ag</li>
<li>brew install ack</li>
<li>brew install p7zip</li>
<li>brew install unrar</li>
<li>brew install enca</li>
<li>brew install mtr</li>
<li>brew install node</li>
<li>brew install go</li>
</ul>
<h3 id="从-Homebrew-cask-安装"><a href="#从-Homebrew-cask-安装" class="headerlink" title="从 Homebrew-cask 安装"></a>从 Homebrew-cask 安装</h3><ul>
<li>brew cask install iterm2</li>
<li>brew cask install geany</li>
<li>brew cask install firefox</li>
<li>brew cask install virtualbox</li>
<li>brew cask install typora</li>
<li>brew cask install visual-studio-code<ul>
<li>安装扩展<ul>
<li>One Dark Pro</li>
</ul>
</li>
</ul>
</li>
<li>brew cask install xmind</li>
<li>brew cask install mplayerx</li>
<li>brew cask install vlc</li>
<li>brew cask install sequel-pro</li>
<li>brew cask install meld</li>
<li>brew cask install neteasemusic</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Tracepad&lt;ul&gt;
&lt;li&gt;启用 Tap to click&lt;/li&gt;
&lt;li&gt;启用 三指移动窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;
    
    </summary>
    
    
      <category term="MBP" scheme="http://joelhy.github.io/tags/MBP/"/>
    
  </entry>
  
  <entry>
    <title>使用 satis 搭建 Composer 私有库</title>
    <link href="http://joelhy.github.io/2016/08/10/composer-private-packages-with-satis/"/>
    <id>http://joelhy.github.io/2016/08/10/composer-private-packages-with-satis/</id>
    <published>2016-08-10T07:26:49.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>公司内网使用 composer 自动加载创建了几个 git 仓库，为支持使用 create-project 创建项目，需要建立类 packagist.org 功能的私有仓库。经过比较，选择轻量的 satis，以下是安装配置笔记。</p>
<h2 id="安装-satis"><a href="#安装-satis" class="headerlink" title="安装 satis"></a>安装 satis</h2><p>命令行下执行： <code>php create-project composer/satis --stability=dev --keep-vcs</code>。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>创建<code>satis.json</code>文件，如官方示例：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"My Repository"</span>,</div><div class="line">    <span class="attr">"homepage"</span>: <span class="string">"http://packages.example.org"</span>,</div><div class="line">    <span class="attr">"repositories"</span>: [</div><div class="line">        &#123; <span class="attr">"type"</span>: <span class="string">"vcs"</span>, <span class="attr">"url"</span>: <span class="string">"https://github.com/mycompany/privaterepo"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"type"</span>: <span class="string">"vcs"</span>, <span class="attr">"url"</span>: <span class="string">"http://svn.example.org/private/repo"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"type"</span>: <span class="string">"vcs"</span>, <span class="attr">"url"</span>: <span class="string">"https://github.com/mycompany/privaterepo2"</span> &#125;</div><div class="line">    ],</div><div class="line">    <span class="attr">"require-all"</span>: <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>reposiories</code> 数组改成公司内网各个使用 composer 自动加载项目的地址，注意 <strong>URL中需要带 .git </strong>。</p>
<h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><p>进入 satis 目录，使用如下命令构建 satis web站点：<code>php bin/satis build satis.json public</code>。</p>
<blockquote>
<p><strong>注</strong>: composer的 <code>repo.packagist</code> 配置项如果采用的是国内的镜像地址，可能上面的 build 语句会失败，需要暂时去掉镜像配置，Linux 下可直接编辑 ~/.config/composer/config.json 文件去掉，Windows 下的操作同理；由于自建的 composer 私有库使用的是 HTTP 协议，而默认 composer 要求必须使用 HTTPS 协议，故 composer create-project 时，必须指定 no-secure-http 参数，或者在配置项指定参数 <code>&quot;secure-http&quot;: false</code>。</p>
</blockquote>
<h2 id="WEB-站点搭建"><a href="#WEB-站点搭建" class="headerlink" title="WEB 站点搭建"></a>WEB 站点搭建</h2><p>使用 apache/nginx 或 php -S 命令创建 WEB 站点，文档根目录指向 satis/public 目录。</p>
<h2 id="使用-satis-私有库"><a href="#使用-satis-私有库" class="headerlink" title="使用 satis 私有库"></a>使用 satis 私有库</h2><h3 id="composer-create-project"><a href="#composer-create-project" class="headerlink" title="composer create-project"></a>composer create-project</h3><p>假设上面配置的 web 站点地址是 <code>http://127.0.0.1</code>，则可使用如下命令创建composer项目：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer create-project vendor/project --no-secure-http --no-interaction --repository=http://127.0.0.1</div></pre></td></tr></table></figure>
<p>或者配置下以下选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">composer config -g secure-http <span class="literal">false</span></div><div class="line">composer config -g repo.my_repo composer http://127.0.0.1</div></pre></td></tr></table></figure>
<p>然后，以后只需要使用下面的命令安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer create-project vendor/project -n</div></pre></td></tr></table></figure>
<h3 id="composer-json-中指定要包含的私有composer项目："><a href="#composer-json-中指定要包含的私有composer项目：" class="headerlink" title="composer.json 中指定要包含的私有composer项目："></a>composer.json 中指定要包含的私有composer项目：</h3><p>通过<code>repositories</code>配置项指定私有composer库的地址，指定后就可以在 require 中使用私有 composer 项目了。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "repositories": [</div><div class="line">      &#123; "type": "composer", "url": "http://127.0.0.1/" &#125;</div><div class="line">    ],</div><div class="line">	"require": [</div><div class="line">		...</div><div class="line">	],</div><div class="line">	...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md" target="_blank" rel="external">Handling private packages with Satis or Toran Proxy</a></li>
<li><a href="http://www.cnblogs.com/maxincai/p/5308284.html" target="_blank" rel="external">使用 satis 搭建一个私有的 Composer 包仓库</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;公司内网使用 composer 自动加载创建了几个 git 仓库，为支持使用 create-project 创建项目，需要建立类 packa
    
    </summary>
    
    
      <category term="PHP" scheme="http://joelhy.github.io/tags/PHP/"/>
    
      <category term="Composer" scheme="http://joelhy.github.io/tags/Composer/"/>
    
      <category term="satis" scheme="http://joelhy.github.io/tags/satis/"/>
    
  </entry>
  
  <entry>
    <title>Vagrant 基于 VirtualBox 制作的 Ubuntu 16.04 box 的安装笔记</title>
    <link href="http://joelhy.github.io/2016/06/27/vagrant-ubuntu-box/"/>
    <id>http://joelhy.github.io/2016/06/27/vagrant-ubuntu-box/</id>
    <published>2016-06-27T03:21:39.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>语言选择英语</li>
<li>按 F4，选择”Install a minimal system”</li>
<li>按 F6，选择”Expert mode”</li>
<li>国家选择 中国</li>
<li>locale 选择 en_US.UTF-8</li>
<li>Additional locales 选择 zh_CN.UTF-8, zh_CN.GB18030, zh_CN.GBK</li>
<li>system locale 选择 en_US.UTF-8</li>
<li>跳过 Access software for a blind person using a braille display</li>
<li>选择不自动检测键盘布局</li>
<li>Country of origin for the keyboard，选择 English (US)</li>
<li>Installer components to load: 不选择任何组件</li>
<li>Allow login as root? 选择 Yes</li>
<li>Create a normal user account now? 选择 Yes</li>
<li>Full name for the new user: 输入 vagrant</li>
<li>Username for your account: 使用默认的 vagrant</li>
<li>密码设置为: vagrant</li>
<li>Use weak password? 选择 Yes</li>
<li>Encrypt your home directory? 选择 No</li>
<li>Set the clock using NTP? 选择 YES</li>
<li>Partioning method: 选择 “Guided - use entire disk”</li>
<li>Partioning scheme: 选择 “Separate /home partition”</li>
<li>Kernel to install: 选择 “linux-generic”</li>
<li>Drivers to include in the initrd: 选择 “generic: include all available drivers”</li>
<li>Use a network mirror? 选择 “No”</li>
<li>Services to use: 只启用 “security updates”</li>
<li>How do you want to manage upgrades on this system? 选择 “No automatic updates”</li>
<li>Choose software to install: 选择<ul>
<li>OpenSSH server</li>
</ul>
</li>
<li>Force GRUB installation to the EFI removable media path? 选择 No</li>
<li>Is the system clock set to UTC? 选择 Yes</li>
</ul>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>以下操作除特别说明，都是以 root 账号操作。</p>
<h3 id="ssh-远程登录支持"><a href="#ssh-远程登录支持" class="headerlink" title="ssh 远程登录支持"></a>ssh 远程登录支持</h3><ul>
<li>选择虚拟机的网络配置，在默认的 NAT 网卡上添加端口映射 127.0.0.1:2222 =&gt; 22</li>
<li>SSH 登录到虚拟机里： <code>ssh -p 2222 vagrant@127.0.0.1</code></li>
<li>运行命令 su，以切换到 root 账号</li>
<li>更改完后，重启操作系统</li>
</ul>
<blockquote>
<p><strong>注:</strong> SSH 登录到虚拟机里是为了方便复制粘贴命令等操作；ubuntu 16.04 默认不允许 root 账号远程登录，故只能使用普通账号登录，再切换到 root 账号</p>
</blockquote>
<h3 id="更改-apt-源"><a href="#更改-apt-源" class="headerlink" title="更改 apt 源"></a>更改 apt 源</h3><ul>
<li>备份 sources.list 文件： </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp sources.list&#123;,.`date +&apos;%F&apos;`&#125;</div></pre></td></tr></table></figure>
<ul>
<li>把以下内容写入到 sources.list 中</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.163.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line"># deb http://mirrors.163.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line"></div><div class="line">#deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">#deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">#deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">#deb http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">#deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure>
<ul>
<li>安装 vim: <code>apt-get install -y vim-nox</code></li>
<li>安装 git:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install -y git</div><div class="line">apt-get install -y git-extras</div></pre></td></tr></table></figure>
<ul>
<li>保存 sources.list 后，运行 <code>apt-get update</code>命令</li>
</ul>
<h3 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh my zsh"></a>安装 oh my zsh</h3><ul>
<li>安装 zsh: <code>apt-get install zsh</code></li>
<li>参照<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">官方文档</a>安装</li>
<li>以 <strong>vagrant</strong> 账号运行如下命令：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</div></pre></td></tr></table></figure>
<h3 id="配置-oh-my-zsh"><a href="#配置-oh-my-zsh" class="headerlink" title="配置 oh my zsh"></a>配置 oh my zsh</h3><ul>
<li>更改 oh my zsh 主题： <code>vim ~/.zshrc</code>，把<code>ZSH_THEME=&quot;robbyrussell&quot;</code>改成 <code>ZSH_THEME=&quot;tjkirch_mod&quot;</code></li>
<li>添加插件git-extras，即把 .zshrc 文件中的<code>plugins=(git)</code>改成<code>plugins=(git git-extras)</code></li>
<li>取消 oh my zsh 的自动更新： 取消 .zshrc 文件中 <code>DISABLE_AUTO_UPDATE=&quot;true&quot;</code> 前的井号”#”</li>
<li>设置编辑时使用的默认编辑器：往 .zshrc 文件末尾加上：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">export EDITOR=&apos;vim&apos;</div><div class="line">export SYSTEMD_EDITOR=&quot;/usr/bin/vim&quot;</div><div class="line">export GIT_EDITOR=vim</div></pre></td></tr></table></figure>
<ul>
<li>切换到 root，创建 zsh 的相关软链接</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /home/vagrant/.zshrc /root/.zshrc</div><div class="line">ln <span class="_">-s</span> /home/vagrant/.oh-my-zsh/ /root/.oh-my-zsh</div></pre></td></tr></table></figure>
<ul>
<li>退出账号，并重新登录，以使 shell 的设置更改生效</li>
<li>vagrant 无密码 sudo 配置</li>
</ul>
<p>命令行运行 <code>visudo</code>，往文件的最末尾加上</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vagrant ALL=(ALL) NOPASSWD: ALL</div></pre></td></tr></table></figure>
<h2 id="安装其他软件包"><a href="#安装其他软件包" class="headerlink" title="安装其他软件包"></a>安装其他软件包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">apt-get install -y tree silversearcher-ag ack-grep net-tools dnsutils</div><div class="line">apt-get install -y git-svn subversion npm nodejs nodejs-legacy # nodejs-legacy 用于创建 /usr/bin/node 软链接</div><div class="line">apt-get install -y nginx mysql-client mysql-server memcached redis-server redis-tools</div><div class="line">systemctl enable nginx mysql memcached redis-server php7.0-fpm</div><div class="line">systemctl start nginx mysql memcached redis-server php7.0-fpm</div><div class="line">npm --registry=https://registry.npm.taobao.org install -g cnpm</div><div class="line">cnpm install -g bower gulp gitbook-cli</div><div class="line">apt-get install -y build-essential unzip p7zip-full p7zip-full</div><div class="line">apt-get install -y php php-cli php-fpm php-mcrypt php-mysql php-curl php-pear php-dev php-phpdbg php-mcrypt php-mbstring</div><div class="line"></div><div class="line">mkdir /usr/local/src/php7-exts # PHP 扩展安装目录</div></pre></td></tr></table></figure>
<h3 id="安装-php-redis-扩展"><a href="#安装-php-redis-扩展" class="headerlink" title="安装 php-redis 扩展"></a>安装 php-redis 扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">pecl install redis</div><div class="line"></div><div class="line"></div><div class="line">cat &gt; /etc/php/7.0/mods-available/redis.ini &lt;&lt; EOF</div><div class="line">; configuration for php common module</div><div class="line">; priority=20</div><div class="line">extension=redis.so</div><div class="line">EOF</div><div class="line"></div><div class="line">phpenmod redis # 等价于下面的2条命令</div><div class="line"># ln -s /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/cli/conf.d/20-redis.ini</div><div class="line"># ln -s /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/fpm/conf.d/20-redis.ini</div></pre></td></tr></table></figure>
<h3 id="安装-memcached-扩展"><a href="#安装-memcached-扩展" class="headerlink" title="安装 memcached 扩展"></a>安装 memcached 扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">apt-get install -y pkg-config libmemcached-dev</div><div class="line">cd /usr/local/src/php7-exts</div><div class="line">git clone -b php7 https://github.com/php-memcached-dev/php-memcached.git memcached</div><div class="line">cd memcached</div><div class="line">phpize</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line"></div><div class="line">cat &gt; /etc/php/7.0/mods-available/memcached.ini &lt;&lt; EOF</div><div class="line">; configuration for php common module</div><div class="line">; priority=20</div><div class="line">extension=memcached.so</div><div class="line">EOF</div><div class="line"></div><div class="line">phpenmod memcached</div></pre></td></tr></table></figure>
<h3 id="安装-msgpack-扩展"><a href="#安装-msgpack-扩展" class="headerlink" title="安装 msgpack 扩展"></a>安装 msgpack 扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">pecl install msgpack-beta</div><div class="line"></div><div class="line"></div><div class="line">cat &gt; /etc/php/7.0/mods-available/msgpack.ini &lt;&lt; EOF</div><div class="line">; configuration for php common module</div><div class="line">; priority=20</div><div class="line">extension=msgpack.so</div><div class="line">EOF</div><div class="line"></div><div class="line"></div><div class="line">phpenmod msgpack</div></pre></td></tr></table></figure>
<h3 id="安装-yar-扩展"><a href="#安装-yar-扩展" class="headerlink" title="安装 yar 扩展"></a>安装 yar 扩展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">apt-get install -y libcurl4-openssl-dev</div><div class="line">cd /usr/local/src/php7-exts</div><div class="line">git clone -b php7 https://github.com/laruence/yar.git yar</div><div class="line">cd yar</div><div class="line">phpize</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line"></div><div class="line">cat &gt; /etc/php/7.0/mods-available/yar.ini &lt;&lt; EOF</div><div class="line">; configuration for php common module</div><div class="line">; priority=20</div><div class="line">extension=yar.so</div><div class="line">EOF</div><div class="line"></div><div class="line"></div><div class="line">phpenmod yar</div></pre></td></tr></table></figure>
<h3 id="安装-composer"><a href="#安装-composer" class="headerlink" title="安装 composer"></a>安装 composer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">php -r &quot;copy(&apos;https://getcomposer.org/installer&apos;, &apos;composer-setup.php&apos;);&quot;</div><div class="line">php composer-setup.php</div><div class="line">php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;</div><div class="line">mv composer.phar /usr/local/bin/composer</div><div class="line"></div><div class="line"># 配置使用国内的Packagist镜像，以 vagrant 账号执行：</div><div class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</div></pre></td></tr></table></figure>
<h3 id="PHP-配置修改"><a href="#PHP-配置修改" class="headerlink" title="PHP 配置修改"></a>PHP 配置修改</h3><p>使用 vim 打开文件 <code>/etc/php/7.0/fpm/pool.d/www.conf</code>，然后把 <code>listen = /run/php/php7.0-fpm.sock</code> 改成 <code>listen = 127.0.0.1:9000</code></p>
<h3 id="MySQL-配置"><a href="#MySQL-配置" class="headerlink" title="MySQL 配置"></a>MySQL 配置</h3><ul>
<li>安全增强，命令行下运行命令：<code>mysql_secure_installation</code></li>
</ul>
<h2 id="vagrant-打包-box"><a href="#vagrant-打包-box" class="headerlink" title="vagrant 打包 box"></a>vagrant 打包 box</h2><ul>
<li>安装 VBoxAddition: 宿主机上运行 <code>vagrant plugin install vagrant-vbguest</code>(vagrant-vbguest 会自动安装 VBoxAddtion)</li>
<li>在虚拟机里运行： ssh-keygen 生成公钥、私钥</li>
<li>在宿主机上执行： <code>vagrant package --base ubuntu_1604</code>, <code>ubuntu_1604</code> 是创建的虚拟机的名称</li>
<li>Vagrantfile 使用 <a href="/attach/Vagrantfile">附件</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;语言选择英语&lt;/li&gt;
&lt;li&gt;按 F4，选择”Install a minimal system”&lt;/li&gt;
&lt;li&gt;按 F6，
    
    </summary>
    
    
      <category term="vagrant" scheme="http://joelhy.github.io/tags/vagrant/"/>
    
      <category term="Ubuntu" scheme="http://joelhy.github.io/tags/Ubuntu/"/>
    
      <category term="VirtualBox" scheme="http://joelhy.github.io/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>移位密码解密题</title>
    <link href="http://joelhy.github.io/2016/03/21/shift-crypto/"/>
    <id>http://joelhy.github.io/2016/03/21/shift-crypto/</id>
    <published>2016-03-21T01:02:42.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>说明：<br>本文来自《Understanding Cryptography》习题</p>
<ul>
<li>密文</li>
</ul>
<p>xultpaajcxitltlxaarpjhtiwtgxktghidhipxciwtvgtpilpit</p>
<ul>
<li>字频分析</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$str = <span class="string">'xultpaajcxitltlxaarpjhtiwtgxktghidhipxciwtvgtpilpitghlxiwiwtxgqadds'</span>;</div><div class="line"> </div><div class="line">$result = array_count_values(str_split($str));</div><div class="line">asort($result, SORT_NUMERIC);</div><div class="line">print_r(array_slice($result, <span class="number">-5</span>));</div><div class="line"><span class="comment">/*</span></div><div class="line">Array</div><div class="line">(</div><div class="line">    [p] =&gt; 5</div><div class="line">    [l] =&gt; 5</div><div class="line">    [x] =&gt; 7</div><div class="line">    [i] =&gt; 9</div><div class="line">    [t] =&gt; 10</div><div class="line">)</div><div class="line">*/$shift = ord(<span class="string">'e'</span>) - ord(<span class="string">'t'</span>);  <span class="comment">// 最高频字符 t 映射成 e</span></div><div class="line">$begin = ord(<span class="string">'a'</span>);</div><div class="line">$end = ord(<span class="string">'z'</span>);</div><div class="line"> </div><div class="line">$arr = [];</div><div class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($str); $i++) &#123;</div><div class="line">    $ord = ord($str[$i]) + $shift;</div><div class="line">    <span class="keyword">if</span> ($ord &lt; $begin) &#123;</div><div class="line">       $ord += <span class="number">26</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ($ord &gt; $end) &#123;</div><div class="line">      $ord -= <span class="number">26</span>;</div><div class="line">    &#125;</div><div class="line">    $arr[] = chr($ord);</div><div class="line">&#125;</div><div class="line"><span class="keyword">echo</span> implode(<span class="string">''</span>, $arr) . <span class="string">"\n"</span>;</div></pre></td></tr></table></figure>
<ul>
<li>暴力破解</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$str = <span class="string">'xultpaajcxitltlxaarpjhtiwtgxktghidhipxciwtvgtpilpitghlxiwiwtxgqadds'</span>;</div><div class="line"></div><div class="line">$begin = ord(<span class="string">'a'</span>);</div><div class="line">$end = ord(<span class="string">'z'</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span> ($shift = <span class="number">1</span>; $shift &lt; <span class="number">26</span>; $shift++) &#123;</div><div class="line">    $arr = [];</div><div class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($str); $i++) &#123;</div><div class="line">        $ord = ord($str[$i]) - $shift;</div><div class="line">        <span class="keyword">if</span> ($ord &lt; $begin) &#123;</div><div class="line">           $ord += <span class="number">26</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> ($ord &gt; $end) &#123;</div><div class="line">          $ord -= <span class="number">26</span>;</div><div class="line">        &#125;</div><div class="line">        $arr[] = chr($ord);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">echo</span> implode(<span class="string">''</span>, $arr) . <span class="string">"\n"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果：</p>
<p>ifweallunitewewillcausetheriverstostainthegreatwaterswiththeirblood</p>
<p>使用 <a href="https://www.google.com/?gws_rd=ssl#q=if+we+all+unite+we+will+cause+the+rivers+to+stain+the+great+water+switch+their+blood" target="_blank" rel="external">Google搜索</a> <code>if we all unite we will cause the rivers to stain the great water switch their blood</code>得到结果：</p>
<pre><code>Tecumseh&apos;s Speech to the Osages (Winter 1811-12)

www.historyisaweapon.com/defcon1/tecumosages.html
</code></pre><p>Tecumseh的简介： <a href="https://en.wikipedia.org/wiki/Tecumseh" target="_blank" rel="external">https://en.wikipedia.org/wiki/Tecumseh</a></p>
<p>反抗侵略的北美土著英雄。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说明：&lt;br&gt;本文来自《Understanding Cryptography》习题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密文&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xultpaajcxitltlxaarpjhtiwtgxktghidhipxciwtvgtpilpit&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="Cryptography" scheme="http://joelhy.github.io/tags/Cryptography/"/>
    
  </entry>
  
  <entry>
    <title>替换密码解谜题</title>
    <link href="http://joelhy.github.io/2016/03/21/substitute-crypto/"/>
    <id>http://joelhy.github.io/2016/03/21/substitute-crypto/</id>
    <published>2016-03-21T01:00:26.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>说明：<br>本密码题来自《Understanding Cryptography》</p>
<p>密文：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">lrvmnir bpr sumvbwvr jx bpr lmiwv yjeryrkbi jx qmbm wi</div><div class="line">bpr xjvni mkd ymibrut jx irhx wi bpr riirkvr jx</div><div class="line">ymbinlmtmipw utn qmumbr dj w ipmhh but bj rhnvwdmbr bpr</div><div class="line">yjeryrkbi jx bpr qmbm mvvjudwko bj yt wkbrusurbmbwjk</div><div class="line">lmird jk xjubt trmui jx ibndt</div><div class="line">wb wi kjb mk rmit bmiq bj rashmwk rmvp yjeryrkb mkd wbi</div><div class="line">iwokwxwvmkvr mkd ijyr ynib urymwk nkrashmwkrd bj ower m</div><div class="line">vjyshrbr rashmkmbwjk jkr cjnhd pmer bj lr fnmhwxwrd mkd</div><div class="line">wkiswurd bj invp mk rabrkb bpmb pr vjnhd urmvp bpr ibmbr</div><div class="line">jx rkhwopbrkrd ywkd vmsmlhr jx urvjokwgwko ijnkdhrii</div><div class="line">ijnkd mkd ipmsrhrii ipmsr w dj kjb drry ytirhx bpr xwkmh</div><div class="line">mnbpjuwbt lnb yt rasruwrkvr cwbp qmbm pmi hrxb kj djnlb</div><div class="line">bpmb bpr xjhhjcwko wi bpr sujsru msshwvmbwjk mkd</div><div class="line">wkbrusurbmbwjk w jxxru yt bprjuwri wk bpr pjsr bpmb bpr</div><div class="line">riirkvr jx jqwkmcmk qmumbr cwhh urymwk wkbmvb</div></pre></td></tr></table></figure>
<p>解密结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE PRACTICE OF THE BASIC MOVEMENTS OF KATA IS</div><div class="line">THE FOCUS AND MASTERY OF SELF IS THE ESSENCE OF</div><div class="line">MATSUBAYASHI RYU KARATE DO I SHALL TRY TO ELUCIDATE THE</div><div class="line">MOVEMENTS OF THE KATA ACCORDING TO MY INTERPRETATION</div><div class="line">BASED ON FORTY YEARS OF STUDY</div><div class="line">IT IS NOT AN EASY TASK TO EXPLAIN EACH MOVEMENT AND ITS</div><div class="line">SIGNIFICANCE AND SOME MUST REMAIN UNEXPLAINED TO GIVE A</div><div class="line">COMPLETE EXPLANATION ONE WOULD HAVE TO BE QUALIFIED AND</div><div class="line">INSPIRED TO SUCH AN EXTENT THAT HE COULD REACH THE STATE</div><div class="line">OF ENLIGHTENED MIND CAPABLE OF RECOGNIZING SOUNDLESS</div><div class="line">SOUND AND SHAPELESS SHAPE I DO NOT DEEM MYSELF THE FINAL</div><div class="line">AUTHORITY BUT MY EXPERIENCE WITH KATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOWING IS THE PROPER APPLICATION AND</div><div class="line">INTERPRETATION I OFFER MY THEORIES IN THE HOPE THAT THE</div><div class="line">ESSENCE OF OKINAWAN KARATE WILL REMAIN INTACT</div></pre></td></tr></table></figure>
<p>解密方法：</p>
<p>使用 <a href="http://practicalcryptography.com/cryptanalysis/letter-frequencies-various-languages/english-letter-frequencies/" target="_blank" rel="external">http://practicalcryptography.com/cryptanalysis/letter-frequencies-various-languages/english-letter-frequencies/</a> 中的词频分析结果，分析出前3个字符：r, b, m。分别替代为 E，T，A（英语中出现概率最高的3个字符，出现的概率分别为：13%, 9%, %8）。</p>
<p>解密出的字符用对应的大写字母替代。再结合其他词频及猜测单词，依次解出所有字符。</p>
<p>字频分析代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$str = <span class="string">'lrvmnir bpr sumvbwvr jx bpr lmiwv yjeryrkbi jx qmbm wi</span></div><div class="line">bpr xjvni mkd ymibrut jx irhx wi bpr riirkvr jx</div><div class="line">ymbinlmtmipw utn qmumbr dj w ipmhh but bj rhnvwdmbr bpr</div><div class="line">yjeryrkbi jx bpr qmbm mvvjudwko bj yt wkbrusurbmbwjk</div><div class="line">lmird jk xjubt trmui jx ibndt</div><div class="line">wb wi kjb mk rmit bmiq bj rashmwk rmvp yjeryrkb mkd wbi</div><div class="line">iwokwxwvmkvr mkd ijyr ynib urymwk nkrashmwkrd bj ower m</div><div class="line">vjyshrbr rashmkmbwjk jkr cjnhd pmer bj lr fnmhwxwrd mkd</div><div class="line">wkiswurd bj invp mk rabrkb bpmb pr vjnhd urmvp bpr ibmbr</div><div class="line">jx rkhwopbrkrd ywkd vmsmlhr jx urvjokwgwko ijnkdhrii</div><div class="line">ijnkd mkd ipmsrhrii ipmsr w dj kjb drry ytirhx bpr xwkmh</div><div class="line">mnbpjuwbt lnb yt rasruwrkvr cwbp qmbm pmi hrxb kj djnlb</div><div class="line">bpmb bpr xjhhjcwko wi bpr sujsru msshwvmbwjk mkd</div><div class="line">wkbrusurbmbwjk w jxxru yt bprjuwri wk bpr pjsr bpmb bpr</div><div class="line">riirkvr jx jqwkmcmk qmumbr cwhh urymwk wkbmvb';</div><div class="line"> </div><div class="line">$arr = [];</div><div class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($str); $i++) &#123;</div><div class="line">    <span class="keyword">if</span> (trim($str[$i]) !== <span class="string">''</span>) &#123;</div><div class="line">        $arr[] = $str[$i];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line">$result = array_count_values($arr);</div><div class="line">asort($result, SORT_NUMERIC);</div><div class="line">print_r(array_slice($result, <span class="number">-5</span>));</div><div class="line"> </div><div class="line"><span class="comment">/*</span></div><div class="line">Array</div><div class="line">(</div><div class="line">    [j] =&gt; 48</div><div class="line">    [k] =&gt; 49</div><div class="line">    [m] =&gt; 62</div><div class="line">    [b] =&gt; 68</div><div class="line">    [r] =&gt; 84</div><div class="line">)</div><div class="line">*/</div><div class="line"> </div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>按英文文本中前3个高频字符替换，即 r -&gt; E, b -&gt; T, m -&gt; A</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$str = <span class="string">'lEvAniE TpE suAvTwvE jx TpE lAiwv yjeEyEkTi jx qATA wi</span></div><div class="line">TpE xjvni Akd yAiTEut jx iEhx wi TpE EiiEkvE jx</div><div class="line">yATinlAtAipw utn qAuATE dj w ipAhh Tut Tj EhnvwdATE TpE</div><div class="line">yjeEyEkTi jx TpE qATA Avvjudwko Tj yt wkTEusuETATwjk</div><div class="line">lAiEd jk xjuTt tEAui jx iTndt</div><div class="line">wT wi kjT Ak EAit TAiq Tj EashAwk EAvp yjeEyEkT Akd wTi</div><div class="line">iwokwxwvAkvE Akd ijyE yniT uEyAwk nkEashAwkEd Tj oweE A</div><div class="line">vjyshETE EashAkATwjk jkE cjnhd pAeE Tj lE fnAhwxwEd Akd</div><div class="line">wkiswuEd Tj invp Ak EaTEkT TpAT pE vjnhd uEAvp TpE iTATE</div><div class="line">jx EkhwopTEkEd ywkd vAsAlhE jx uEvjokwgwko ijnkdhEii</div><div class="line">ijnkd Akd ipAsEhEii ipAsE w dj kjT dEEy ytiEhx TpE xwkAh</div><div class="line">AnTpjuwTt lnT yt EasEuwEkvE cwTp qATA pAi hExT kj djnlT</div><div class="line">TpAT TpE xjhhjcwko wi TpE sujsEu AsshwvATwjk Akd</div><div class="line">wkTEusuETATwjk w jxxEu yt TpEjuwEi wk TpE pjsE TpAT TpE</div><div class="line">EiiEkvE jx jqwkAcAk qAuATE cwhh uEyAwk wkTAvT';</div><div class="line"> </div><div class="line">$arr = preg_split(<span class="string">'/\s+/'</span>, $str);</div><div class="line">$result = array_count_values($arr);</div><div class="line">asort($result, SORT_NUMERIC);</div><div class="line">print_r(array_slice($result, <span class="number">-10</span>));</div><div class="line"><span class="comment">/*</span></div><div class="line">Array</div><div class="line">(</div><div class="line">    [kjT] =&gt; 2</div><div class="line">    [w] =&gt; 3</div><div class="line">    [TpAT] =&gt; 3</div><div class="line">    [qATA] =&gt; 3</div><div class="line">    [yt] =&gt; 3</div><div class="line">    [wi] =&gt; 4</div><div class="line">    [Tj] =&gt; 6</div><div class="line">    [Akd] =&gt; 6</div><div class="line">    [jx] =&gt; 9</div><div class="line">    [TpE] =&gt; 12</div><div class="line">)</div><div class="line">*/</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<p>3个字母的单词按频率排序： TpE =&gt; 12, Akd =&gt; 6<br>2个字母的单词按频率排序： jx =&gt; 9, Tj =&gt; 6, wi =&gt; 4, yt =&gt; 3<br>1个字母的单词： w =&gt; 3</p>
<p>根据 <a href="http://practicalcryptography.com/cryptanalysis/letter-frequencies-various-languages/english-letter-frequencies/" target="_blank" rel="external">http://practicalcryptography.com/cryptanalysis/letter-frequencies-various-languages/english-letter-frequencies/</a> 的结果：<br>最频繁出现的3个字符的单词分别为： the =&gt; 6.42%, and =&gt; 2.75%, for =&gt; 1.01%<br>解出<br>  TpE 中的 p 对应 H (后面内容中，“对应”2个字用 “=&gt;” 代替，大写字母代表解密结果)<br>  Akd 中： k =&gt; N, d =&gt; D</p>
<p>最频繁出现的2个字符的单词分别为： of =&gt; 2.76%, to =&gt; 2.67%, in =&gt; 2.31%, is =&gt; 1.12%<br>解出<br>  Tj 中， j =&gt; O<br>  这样，jx 即 Ox， of 的词频是最高的，因此 x =&gt; F</p>
<p>最频繁出现的2个字符的单词分别为： a =&gt; 2.43%, i =&gt; 0.41%<br>  即 w 可能是 A 也可能是 I<br>  根据文中 *TwON 判断， w =&gt; I</p>
<p>得到结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">lEvAniE THE suAvTIvE OF THE lAiIv yOeEyENTi OF qATA Ii</div><div class="line">THE FOvni AND yAiTEut OF iEhF Ii THE EiiENvE OF</div><div class="line">yATinlAtAiHI utn qAuATE DO I iHAhh Tut TO EhnvIDATE THE</div><div class="line">yOeEyENTi OF THE qATA AvvOuDINo TO yt INTEusuETATION</div><div class="line">lAiED ON FOuTt tEAui OF iTnDt</div><div class="line">IT Ii NOT AN EAit TAiq TO EashAIN EAvH yOeEyENT AND ITi</div><div class="line">iIoNIFIvANvE AND iOyE yniT uEyAIN nNEashAINED TO oIeE A</div><div class="line">vOyshETE EashANATION ONE cOnhD HAeE TO lE fnAhIFIED AND</div><div class="line">INisIuED TO invH AN EaTENT THAT HE vOnhD uEAvH THE iTATE</div><div class="line">OF ENhIoHTENED yIND vAsAlhE OF uEvOoNIgINo iOnNDhEii</div><div class="line">iOnND AND iHAsEhEii iHAsE I DO NOT DEEy ytiEhF THE FINAh</div><div class="line">AnTHOuITt lnT yt EasEuIENvE cITH qATA HAi hEFT NO DOnlT</div><div class="line">THAT THE FOhhOcINo Ii THE suOsEu AsshIvATION AND</div><div class="line">INTEusuETATION I OFFEu yt THEOuIEi IN THE HOsE THAT THE</div><div class="line">EiiENvE OF OqINAcAN qAuATE cIhh uEyAIN INTAvT</div></pre></td></tr></table></figure>
<p>INTAvT 根据常识推断： 解出： v =&gt; C</p>
<p>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">lECAniE THE suACTICE OF THE lAiIC yOeEyENTi OF qATA Ii</div><div class="line">THE FOCni AND yAiTEut OF iEhF Ii THE EiiENCE OF</div><div class="line">yATinlAtAiHI utn qAuATE DO I iHAhh Tut TO EhnCIDATE THE</div><div class="line">yOeEyENTi OF THE qATA ACCOuDINo TO yt INTEusuETATION</div><div class="line">lAiED ON FOuTt tEAui OF iTnDt</div><div class="line">IT Ii NOT AN EAit TAiq TO EashAIN EACH yOeEyENT AND ITi</div><div class="line">iIoNIFICANCE AND iOyE yniT uEyAIN nNEashAINED TO oIeE A</div><div class="line">COyshETE EashANATION ONE cOnhD HAeE TO lE fnAhIFIED AND</div><div class="line">INisIuED TO inCH AN EaTENT THAT HE COnhD uEACH THE iTATE</div><div class="line">OF ENhIoHTENED yIND CAsAlhE OF uECOoNIgINo iOnNDhEii</div><div class="line">iOnND AND iHAsEhEii iHAsE I DO NOT DEEy ytiEhF THE FINAh</div><div class="line">AnTHOuITt lnT yt EasEuIENCE cITH qATA HAi hEFT NO DOnlT</div><div class="line">THAT THE FOhhOcINo Ii THE suOsEu AsshICATION AND</div><div class="line">INTEusuETATION I OFFEu yt THEOuIEi IN THE HOsE THAT THE</div><div class="line">EiiENCE OF OqINAcAN qAuATE cIhh uEyAIN INTACT</div></pre></td></tr></table></figure>
<p>EiiENCE 根据常识解出： i =&gt; S</p>
<p>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">lECAnSE THE suACTICE OF THE lASIC yOeEyENTS OF qATA IS</div><div class="line">THE FOCnS AND yASTEut OF SEhF IS THE ESSENCE OF</div><div class="line">yATSnlAtASHI utn qAuATE DO I SHAhh Tut TO EhnCIDATE THE</div><div class="line">yOeEyENTS OF THE qATA ACCOuDINo TO yt INTEusuETATION</div><div class="line">lASED ON FOuTt tEAuS OF STnDt</div><div class="line">IT IS NOT AN EASt TASq TO EashAIN EACH yOeEyENT AND ITS</div><div class="line">SIoNIFICANCE AND SOyE ynST uEyAIN nNEashAINED TO oIeE A</div><div class="line">COyshETE EashANATION ONE cOnhD HAeE TO lE fnAhIFIED AND</div><div class="line">INSsIuED TO SnCH AN EaTENT THAT HE COnhD uEACH THE STATE</div><div class="line">OF ENhIoHTENED yIND CAsAlhE OF uECOoNIgINo SOnNDhESS</div><div class="line">SOnND AND SHAsEhESS SHAsE I DO NOT DEEy ytSEhF THE FINAh</div><div class="line">AnTHOuITt lnT yt EasEuIENCE cITH qATA HAS hEFT NO DOnlT</div><div class="line">THAT THE FOhhOcINo IS THE suOsEu AsshICATION AND</div><div class="line">INTEusuETATION I OFFEu yt THEOuIES IN THE HOsE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qAuATE cIhh uEyAIN INTACT</div></pre></td></tr></table></figure>
<p>FOCnS 根据常识解出： n =&gt; U<br>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">lECAUSE THE suACTICE OF THE lASIC yOeEyENTS OF qATA IS</div><div class="line">THE FOCUS AND yASTEut OF SEhF IS THE ESSENCE OF</div><div class="line">yATSUlAtASHI utU qAuATE DO I SHAhh Tut TO EhUCIDATE THE</div><div class="line">yOeEyENTS OF THE qATA ACCOuDINo TO yt INTEusuETATION</div><div class="line">lASED ON FOuTt tEAuS OF STUDt</div><div class="line">IT IS NOT AN EASt TASq TO EashAIN EACH yOeEyENT AND ITS</div><div class="line">SIoNIFICANCE AND SOyE yUST uEyAIN UNEashAINED TO oIeE A</div><div class="line">COyshETE EashANATION ONE cOUhD HAeE TO lE fUAhIFIED AND</div><div class="line">INSsIuED TO SUCH AN EaTENT THAT HE COUhD uEACH THE STATE</div><div class="line">OF ENhIoHTENED yIND CAsAlhE OF uECOoNIgINo SOUNDhESS</div><div class="line">SOUND AND SHAsEhESS SHAsE I DO NOT DEEy ytSEhF THE FINAh</div><div class="line">AUTHOuITt lUT yt EasEuIENCE cITH qATA HAS hEFT NO DOUlT</div><div class="line">THAT THE FOhhOcINo IS THE suOsEu AsshICATION AND</div><div class="line">INTEusuETATION I OFFEu yt THEOuIES IN THE HOsE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qAuATE cIhh uEyAIN INTACT</div></pre></td></tr></table></figure>
<p>lECAUSE 根据常识解出： l =&gt; B<br>SHAhh 根据常识解出： h =&gt; L<br>STUDt, EASt 根据常识解出： t =&gt; Y</p>
<p>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE suACTICE OF THE BASIC yOeEyENTS OF qATA IS</div><div class="line">THE FOCUS AND yASTEuY OF SELF IS THE ESSENCE OF</div><div class="line">yATSUBAYASHI uYU qAuATE DO I SHALL TuY TO ELUCIDATE THE</div><div class="line">yOeEyENTS OF THE qATA ACCOuDINo TO yY INTEusuETATION</div><div class="line">BASED ON FOuTY YEAuS OF STUDY</div><div class="line">IT IS NOT AN EASY TASq TO EasLAIN EACH yOeEyENT AND ITS</div><div class="line">SIoNIFICANCE AND SOyE yUST uEyAIN UNEasLAINED TO oIeE A</div><div class="line">COysLETE EasLANATION ONE cOULD HAeE TO BE fUALIFIED AND</div><div class="line">INSsIuED TO SUCH AN EaTENT THAT HE COULD uEACH THE STATE</div><div class="line">OF ENLIoHTENED yIND CAsABLE OF uECOoNIgINo SOUNDLESS</div><div class="line">SOUND AND SHAsELESS SHAsE I DO NOT DEEy yYSELF THE FINAL</div><div class="line">AUTHOuITY BUT yY EasEuIENCE cITH qATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOcINo IS THE suOsEu AssLICATION AND</div><div class="line">INTEusuETATION I OFFEu yY THEOuIES IN THE HOsE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qAuATE cILL uEyAIN INTACT</div></pre></td></tr></table></figure>
<p>FOuTY, YEAuS 根据常识解出： u =&gt; R<br>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE sRACTICE OF THE BASIC yOeEyENTS OF qATA IS</div><div class="line">THE FOCUS AND yASTERY OF SELF IS THE ESSENCE OF</div><div class="line">yATSUBAYASHI RYU qARATE DO I SHALL TRY TO ELUCIDATE THE</div><div class="line">yOeEyENTS OF THE qATA ACCORDINo TO yY INTERsRETATION</div><div class="line">BASED ON FORTY YEARS OF STUDY</div><div class="line">IT IS NOT AN EASY TASq TO EasLAIN EACH yOeEyENT AND ITS</div><div class="line">SIoNIFICANCE AND SOyE yUST REyAIN UNEasLAINED TO oIeE A</div><div class="line">COysLETE EasLANATION ONE cOULD HAeE TO BE fUALIFIED AND</div><div class="line">INSsIRED TO SUCH AN EaTENT THAT HE COULD REACH THE STATE</div><div class="line">OF ENLIoHTENED yIND CAsABLE OF RECOoNIgINo SOUNDLESS</div><div class="line">SOUND AND SHAsELESS SHAsE I DO NOT DEEy yYSELF THE FINAL</div><div class="line">AUTHORITY BUT yY EasERIENCE cITH qATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOcINo IS THE sROsER AssLICATION AND</div><div class="line">INTERsRETATION I OFFER yY THEORIES IN THE HOsE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qARATE cILL REyAIN INTACT</div></pre></td></tr></table></figure>
<p>REyAIN 根据常识解出： y =&gt; M<br>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE sRACTICE OF THE BASIC MOeEMENTS OF qATA IS</div><div class="line">THE FOCUS AND MASTERY OF SELF IS THE ESSENCE OF</div><div class="line">MATSUBAYASHI RYU qARATE DO I SHALL TRY TO ELUCIDATE THE</div><div class="line">MOeEMENTS OF THE qATA ACCORDINo TO MY INTERsRETATION</div><div class="line">BASED ON FORTY YEARS OF STUDY</div><div class="line">IT IS NOT AN EASY TASq TO EasLAIN EACH MOeEMENT AND ITS</div><div class="line">SIoNIFICANCE AND SOME MUST REMAIN UNEasLAINED TO oIeE A</div><div class="line">COMsLETE EasLANATION ONE cOULD HAeE TO BE fUALIFIED AND</div><div class="line">INSsIRED TO SUCH AN EaTENT THAT HE COULD REACH THE STATE</div><div class="line">OF ENLIoHTENED MIND CAsABLE OF RECOoNIgINo SOUNDLESS</div><div class="line">SOUND AND SHAsELESS SHAsE I DO NOT DEEM MYSELF THE FINAL</div><div class="line">AUTHORITY BUT MY EasERIENCE cITH qATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOcINo IS THE sROsER AssLICATION AND</div><div class="line">INTERsRETATION I OFFER MY THEORIES IN THE HOsE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qARATE cILL REMAIN INTACT</div></pre></td></tr></table></figure>
<p>MOeEMENTS 根据常识解出： e =&gt; V<br>INTERsRETATION 根据常识解出： s =&gt; P</p>
<p>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE PRACTICE OF THE BASIC MOVEMENTS OF qATA IS</div><div class="line">THE FOCUS AND MASTERY OF SELF IS THE ESSENCE OF</div><div class="line">MATSUBAYASHI RYU qARATE DO I SHALL TRY TO ELUCIDATE THE</div><div class="line">MOVEMENTS OF THE qATA ACCORDINo TO MY INTERPRETATION</div><div class="line">BASED ON FORTY YEARS OF STUDY</div><div class="line">IT IS NOT AN EASY TASq TO EaPLAIN EACH MOVEMENT AND ITS</div><div class="line">SIoNIFICANCE AND SOME MUST REMAIN UNEaPLAINED TO oIVE A</div><div class="line">COMPLETE EaPLANATION ONE cOULD HAVE TO BE fUALIFIED AND</div><div class="line">INSPIRED TO SUCH AN EaTENT THAT HE COULD REACH THE STATE</div><div class="line">OF ENLIoHTENED MIND CAPABLE OF RECOoNIgINo SOUNDLESS</div><div class="line">SOUND AND SHAPELESS SHAPE I DO NOT DEEM MYSELF THE FINAL</div><div class="line">AUTHORITY BUT MY EaPERIENCE cITH qATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOcINo IS THE PROPER APPLICATION AND</div><div class="line">INTERPRETATION I OFFER MY THEORIES IN THE HOPE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qARATE cILL REMAIN INTACT</div></pre></td></tr></table></figure>
<p>EaPLAIN 根据常识解出： a =&gt; X<br>ACCORDINo 根据常识解出： o =&gt; G</p>
<p>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE PRACTICE OF THE BASIC MOVEMENTS OF qATA IS</div><div class="line">THE FOCUS AND MASTERY OF SELF IS THE ESSENCE OF</div><div class="line">MATSUBAYASHI RYU qARATE DO I SHALL TRY TO ELUCIDATE THE</div><div class="line">MOVEMENTS OF THE qATA ACCORDING TO MY INTERPRETATION</div><div class="line">BASED ON FORTY YEARS OF STUDY</div><div class="line">IT IS NOT AN EASY TASq TO EXPLAIN EACH MOVEMENT AND ITS</div><div class="line">SIGNIFICANCE AND SOME MUST REMAIN UNEXPLAINED TO GIVE A</div><div class="line">COMPLETE EXPLANATION ONE cOULD HAVE TO BE fUALIFIED AND</div><div class="line">INSPIRED TO SUCH AN EXTENT THAT HE COULD REACH THE STATE</div><div class="line">OF ENLIGHTENED MIND CAPABLE OF RECOGNIgING SOUNDLESS</div><div class="line">SOUND AND SHAPELESS SHAPE I DO NOT DEEM MYSELF THE FINAL</div><div class="line">AUTHORITY BUT MY EXPERIENCE cITH qATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOcING IS THE PROPER APPLICATION AND</div><div class="line">INTERPRETATION I OFFER MY THEORIES IN THE HOPE THAT THE</div><div class="line">ESSENCE OF OqINAcAN qARATE cILL REMAIN INTACT</div></pre></td></tr></table></figure>
<p>fUALIFIED 根据常识解出： f =&gt; Q<br>RECOGNIgING 根据常识解出： g =&gt; Z<br>TASq 根据常识解出： q =&gt; K<br>FOLLOcING 根据常识解出： c =&gt; W</p>
<p>结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BECAUSE THE PRACTICE OF THE BASIC MOVEMENTS OF KATA IS</div><div class="line">THE FOCUS AND MASTERY OF SELF IS THE ESSENCE OF</div><div class="line">MATSUBAYASHI RYU KARATE DO I SHALL TRY TO ELUCIDATE THE</div><div class="line">MOVEMENTS OF THE KATA ACCORDING TO MY INTERPRETATION</div><div class="line">BASED ON FORTY YEARS OF STUDY</div><div class="line">IT IS NOT AN EASY TASK TO EXPLAIN EACH MOVEMENT AND ITS</div><div class="line">SIGNIFICANCE AND SOME MUST REMAIN UNEXPLAINED TO GIVE A</div><div class="line">COMPLETE EXPLANATION ONE WOULD HAVE TO BE QUALIFIED AND</div><div class="line">INSPIRED TO SUCH AN EXTENT THAT HE COULD REACH THE STATE</div><div class="line">OF ENLIGHTENED MIND CAPABLE OF RECOGNIZING SOUNDLESS</div><div class="line">SOUND AND SHAPELESS SHAPE I DO NOT DEEM MYSELF THE FINAL</div><div class="line">AUTHORITY BUT MY EXPERIENCE WITH KATA HAS LEFT NO DOUBT</div><div class="line">THAT THE FOLLOWING IS THE PROPER APPLICATION AND</div><div class="line">INTERPRETATION I OFFER MY THEORIES IN THE HOPE THAT THE</div><div class="line">ESSENCE OF OKINAWAN KARATE WILL REMAIN INTACT</div></pre></td></tr></table></figure>
<p>至此解密完毕</p>
<p>明文使用 <a href="https://www.google.com/#tbm=bks&amp;q=BECAUSE+THE+PRACTICE+OF+THE+BASIC+MOVEMENTS+OF+KATA+IS+THE+FOCUS+AND+MASTERY+OF+SELF+IS+THE+ESSENCE+OF++MATSUBAYASHI+RYU+KARATE" target="_blank" rel="external">Google 的图书搜索</a> 得到结果：</p>
<pre><code>The Essence of Okinawan Karate-Do - Page 56
by Shoshin Nagamine
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说明：&lt;br&gt;本密码题来自《Understanding Cryptography》&lt;/p&gt;
&lt;p&gt;密文：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
    
      <category term="Cryptography" scheme="http://joelhy.github.io/tags/Cryptography/"/>
    
  </entry>
  
  <entry>
    <title>PHP5.6 vs. PHP7.0 vs. HHVM3.11.0 for循环性能测试</title>
    <link href="http://joelhy.github.io/2015/12/15/php-for-benchmark/"/>
    <id>http://joelhy.github.io/2015/12/15/php-for-benchmark/</id>
    <published>2015-12-15T09:34:27.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>以下记录简单的for循环性能对比</p>
<h2 id="循环1千万次"><a href="#循环1千万次" class="headerlink" title="循环1千万次"></a>循环1千万次</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">for ($i = 0; $i &lt; 10000000; $i++) &#123;</div><div class="line">    mt_rand(0, 100);</div><div class="line"></div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">joelhy@archlinux: /tmp $ time php for.php</div><div class="line">php for.php  4.12s user 0.00s system 99% cpu 4.124 total</div><div class="line">joelhy@archlinux: /tmp $ time php7 for.php</div><div class="line">php7 for.php  0.45s user 0.00s system 99% cpu 0.455 total</div><div class="line">joelhy@archlinux: /tmp $ time hhvm for.php</div><div class="line">hhvm for.php  0.19s user 0.02s system 90% cpu 0.228 total</div></pre></td></tr></table></figure>
<h2 id="循环1亿次"><a href="#循环1亿次" class="headerlink" title="循环1亿次"></a>循环1亿次</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">for ($i = 0; $i &lt; 100000000; $i++) &#123;</div><div class="line">    mt_rand(0, 100);</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">joelhy@archlinux: /tmp $ time php for.php</div><div class="line">php for.php  42.08s user 0.00s system 99% cpu 42.093 total</div><div class="line">joelhy@archlinux: /tmp $ time php7 for.php</div><div class="line">php7 for.php  4.56s user 0.01s system 99% cpu 4.574 total</div><div class="line">joelhy@archlinux: /tmp $ time hhvm for.php</div><div class="line">hhvm for.php  1.07s user 0.02s system 97% cpu 1.118 total</div></pre></td></tr></table></figure>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>就for循环而论，PHP 7相对PHP5.6有极大的性能提升, 不过执行速度仍然逊于HHVM 3.11。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下记录简单的for循环性能对比&lt;/p&gt;
&lt;h2 id=&quot;循环1千万次&quot;&gt;&lt;a href=&quot;#循环1千万次&quot; class=&quot;headerlink&quot; title=&quot;循环1千万次&quot;&gt;&lt;/a&gt;循环1千万次&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://joelhy.github.io/tags/PHP/"/>
    
      <category term="benchmark" scheme="http://joelhy.github.io/tags/benchmark/"/>
    
  </entry>
  
  <entry>
    <title>常用Linux命令记录</title>
    <link href="http://joelhy.github.io/2015/07/14/linux-command-cheat-list/"/>
    <id>http://joelhy.github.io/2015/07/14/linux-command-cheat-list/</id>
    <published>2015-07-14T08:27:09.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文记录个人 Linux 下需要使用的一些命令。</p>
<ul>
<li>ssh D 代理设置<br>/usr/bin/sshpass -p ‘secret’ ssh -qTfnN -D 7070 username@ip</li>
<li>把所有文件名的首字符改成大写</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *;                 </div><div class="line"><span class="keyword">do</span> mv <span class="variable">$file</span> `<span class="built_in">echo</span> <span class="variable">$file</span> | awk -F . <span class="string">'&#123;print toupper(substr($0, 1, 1))substr($0, 2)&#125;'</span> `;</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本文记录个人 Linux 下需要使用的一些命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ssh D 代理设置&lt;br&gt;/usr/bin/sshpass -
    
    </summary>
    
    
      <category term="Linux" scheme="http://joelhy.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="http://joelhy.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>使用XHProf分析PHP程序性能</title>
    <link href="http://joelhy.github.io/2015/07/03/profiling-with-xhprof/"/>
    <id>http://joelhy.github.io/2015/07/03/profiling-with-xhprof/</id>
    <published>2015-07-03T11:36:33.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>XHProf是facebook开发的一个PHP性能分析工具，为PHP扩展的形式：<a href="https://pecl.php.net/package/xhprof" target="_blank" rel="external">https://pecl.php.net/package/xhprof</a>，相对xdebug对应用程序的性能影响很小。</p>
<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><p>安装 graphviz，用于性能分析数据的图形化显示，Arch Linux上安装方式如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -S graphviz</div></pre></td></tr></table></figure></p>
<p>安装XHProf扩展<br>由于XHProf当前还是beta阶段，故PECL方式安装xhprof时，需要添加<code>-beta</code>后缀，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pecl install xhprof-beta</div></pre></td></tr></table></figure></p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>本地我安装PHP是v5.4.39版本，以fpm方式运行。XHProf的PHP相关文件在目录<code>/usr/local/php-5.4.39_fpm/share/pear/</code>。<br>需要分析性能时，加入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">xhprof_enable();</div><div class="line"></div><div class="line">// 需要分析性能的代码放这里</div><div class="line"></div><div class="line">$xhprof_data = xhprof_disable();</div><div class="line">$XHPROF_ROOT = &apos;/usr/local/php-5.4.39_fpm/share/pear/xhprof_html&apos;;</div><div class="line">require $XHPROF_ROOT . &quot;xhprof_lib/utils/xhprof_lib.php&quot;;</div><div class="line">require $XHPROF_ROOT . &quot;xhprof_lib/utils/xhprof_runs.php&quot;;</div><div class="line"></div><div class="line">$xhprof_runs = new XHProfRuns_Default();</div><div class="line">$xhprof_type = basename($_SERVER[&apos;REQUEST_URI&apos;], &apos;.php&apos;);</div><div class="line">$run_id = $xhprof_runs-&gt;save_run($xhprof_data, $xhprof_type);</div><div class="line">echo &quot;\n&lt;a href=&apos;http://&lt;xhprof-ui-address&gt;/index.php?run=$run_id&amp;source=$xhprof_type&apos; target=&apos;_blank&apos;&gt;xhprof: $xhprof_type&lt;/a&gt;\n&quot;;</div></pre></td></tr></table></figure></p>
<p>如上在需要性能分析的代码前，调用 xhprof_enable() 函数，在代码后调用 xhprof_disable() 等代码即可。然后点击最后一行生成的xhprof地址即可查看性能分析结果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;XHProf是facebook开发的一个PHP性能分析工具，为PHP扩展的形式：&lt;a href=&quot;https://pecl.php.net/
    
    </summary>
    
    
      <category term="PHP" scheme="http://joelhy.github.io/tags/PHP/"/>
    
      <category term="benchmark" scheme="http://joelhy.github.io/tags/benchmark/"/>
    
  </entry>
  
  <entry>
    <title>define 与 const 方式定义常量性能对比</title>
    <link href="http://joelhy.github.io/2015/06/27/define-vs-const/"/>
    <id>http://joelhy.github.io/2015/06/27/define-vs-const/</id>
    <published>2015-06-27T05:23:28.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文PHP里实测了 define 与 const 方式定义常量的性能,得出 const 定义方式的效率大概为 define 方式的2倍。</p>
<h2 id="测试过程说明"><a href="#测试过程说明" class="headerlink" title="测试过程说明"></a>测试过程说明</h2><h3 id="写用于生成-性能测试代码-的代码"><a href="#写用于生成-性能测试代码-的代码" class="headerlink" title="写用于生成 性能测试代码 的代码"></a>写用于生成 性能测试代码 的代码</h3><p>测试中，define、const各调用 10万 次，故需要用程序生成 性能测试程序，生成性能测试程序的代码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$code = <span class="string">&lt;&lt;&lt;'EOCODE'</span></div><div class="line">&lt;?php</div><div class="line">set_time_limit(120);</div><div class="line"><span class="subst">$start</span> = microtime(true);</div><div class="line"></div><div class="line">EOCODE;</div><div class="line">$i = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> ($i &lt; <span class="number">100000</span>) &#123;</div><div class="line">    $i++;</div><div class="line">    $code .= <span class="string">"define('DEF"</span> . $i . <span class="string">"', "</span> . $i . <span class="string">");\n"</span>;</div><div class="line">&#125;</div><div class="line">$code .= <span class="string">&lt;&lt;&lt;'EOCODE'</span></div><div class="line"><span class="subst">$end</span> = microtime(true);</div><div class="line">echo (<span class="subst">$end</span> - <span class="subst">$start</span>) . "s&lt;br&gt;\n";</div><div class="line"></div><div class="line"></div><div class="line"><span class="subst">$start</span> = microtime(true);</div><div class="line">EOCODE;</div><div class="line">$i = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> ($i &lt; <span class="number">100000</span>) &#123;</div><div class="line">    $i++;</div><div class="line">    $code .= <span class="string">"const CON"</span> . $i . <span class="string">" = "</span> . $i . <span class="string">";\n"</span>;</div><div class="line">&#125;</div><div class="line">$code .= <span class="string">&lt;&lt;&lt;'EOCODE'</span></div><div class="line"><span class="subst">$end</span> = microtime(true);</div><div class="line">echo (<span class="subst">$end</span> - <span class="subst">$start</span>) . "s&lt;br&gt;\n";</div><div class="line"></div><div class="line"></div><div class="line">EOCODE;</div><div class="line"></div><div class="line">file_put_contents(<span class="keyword">__DIR__</span> . <span class="string">'/const_define.php'</span>, $code);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="测试性能"><a href="#测试性能" class="headerlink" title="测试性能"></a>测试性能</h3><p>运行上一步生成的 const_define.php 程序，结果如下：<br>第一次结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">0.04206109046936s</div><div class="line">0.019221067428589s</div></pre></td></tr></table></figure></p>
<p>第二次结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">0.042579889297485s</div><div class="line">0.020570993423462s</div></pre></td></tr></table></figure></p>
<p>第三次结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">0.043606042861938s</div><div class="line">0.020286083221436s</div></pre></td></tr></table></figure></p>
<p>如上， const 的性能大概为 define 性能的2倍。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本文PHP里实测了 define 与 const 方式定义常量的性能,得出 const 定义方式的效率大概为 define 方式的2倍。&lt;/
    
    </summary>
    
    
      <category term="PHP" scheme="http://joelhy.github.io/tags/PHP/"/>
    
      <category term="benchmark" scheme="http://joelhy.github.io/tags/benchmark/"/>
    
  </entry>
  
  <entry>
    <title>Arch Linux上安装SVN v1.6</title>
    <link href="http://joelhy.github.io/2015/06/19/install-svn-v1-6-on-archlinux/"/>
    <id>http://joelhy.github.io/2015/06/19/install-svn-v1-6-on-archlinux/</id>
    <published>2015-06-19T10:37:45.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Arch Linux上安装的SVN为v1.8，工作中有些共享的SVN工作拷贝是v1.6格式的，需要使用SVN v1.6，AUR中虽然有<code>subversion-1.6</code>软件包，但是安装该软件包会替换已安装的SVN v1.8，为了既能使用v1.8也能使用v1.6，即两个版本同时共存，需要修改<code>subversion-1.6</code>软件包的PKGBUILD文件，本文介绍实现两个版本共存所需要的修改：</p>
<h2 id="修改PKGBUILD文件"><a href="#修改PKGBUILD文件" class="headerlink" title="修改PKGBUILD文件"></a>修改PKGBUILD文件</h2><p>普通帐号下运行<code>yaourt -S aur/subversion-1.6</code>，在提示是否想修改PKGBUILD文件时，输入<code>Y</code>。做如下修改：</p>
<ul>
<li><code>provides=(&#39;svn&#39; &#39;subversion&#39;)</code>改成<code>provides=(&#39;svn=1.6&#39; &#39;subversion=1.6&#39;)</code></li>
<li>注释掉<code>conflicts=(&#39;svn&#39; &#39;subversion&#39;)</code>这一行，即改成<code>#conflicts=(&#39;svn&#39; &#39;subversion&#39;)</code></li>
<li><code>--prefix=/usr</code>改成<code>--prefix=/usr/local</code></li>
<li><code>./configure</code>语句后面加上<code>--with-jdk=/usr/lib/jvm/default</code></li>
<li>把文件中的<code>/usr/share/subversion</code>替换成<code>/usr/share/subversion-1.6</code><h2 id="避免跟现有SVN相关文件的冲突"><a href="#避免跟现有SVN相关文件的冲突" class="headerlink" title="避免跟现有SVN相关文件的冲突"></a>避免跟现有SVN相关文件的冲突</h2>按照如下说明，备份配置文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /etc/conf.d; mv svnserve svnserve_1.8</div><div class="line"><span class="built_in">cd</span> ../xinetd.d; mv svn svn_1.8</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h2><p>如上操作处理完后，即可退出PKGBUILD文件，并一路按回车安装SVN v1.6。安装完的SVN v1.6的可执行文件在<code>/usr/local/bin</code>目录下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;Arch Linux上安装的SVN为v1.8，工作中有些共享的SVN工作拷贝是v1.6格式的，需要使用SVN v1.6，AUR中虽然有&lt;co
    
    </summary>
    
    
      <category term="SVN" scheme="http://joelhy.github.io/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>使用 systemd timer 备份数据库</title>
    <link href="http://joelhy.github.io/2015/06/18/backup-database-using-systemd-timer/"/>
    <id>http://joelhy.github.io/2015/06/18/backup-database-using-systemd-timer/</id>
    <published>2015-06-18T10:53:25.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>主要的Linux发行版都改用systemd 来替代 System V启动方式，其中 systemd timer 能替代 crontab 计划任务的大部分功能。本文介绍了用systemd timer如何实现数据库备份，其他类型的计划任务可以同理实现。</p>
<h2 id="定义timer文件"><a href="#定义timer文件" class="headerlink" title="定义timer文件"></a>定义timer文件</h2><p>进入目录<code>/usr/lib/systemd/system</code>，按如下文件建立timer：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Runs db backup every hour</div><div class="line"></div><div class="line">[Timer]</div><div class="line"># Time to wait after booting before we run first time</div><div class="line">OnBootSec=10min</div><div class="line"># Time between running each consecutive time</div><div class="line">OnUnitActiveSec=1h</div><div class="line">Unit=db_backup.service</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure></p>
<h2 id="定义service文件"><a href="#定义service文件" class="headerlink" title="定义service文件"></a>定义service文件</h2><p>进入目录<code>/usr/lib/systemd/system</code>，按如下文件建立service：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Backup database</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=simple</div><div class="line">ExecStart=/usr/local/bin/db_backup</div></pre></td></tr></table></figure></p>
<h2 id="写数据库备份脚本"><a href="#写数据库备份脚本" class="headerlink" title="写数据库备份脚本"></a>写数据库备份脚本</h2><p>创建文件<code>/usr/local/bin/db_backup</code>，并写入数据库备份语句，例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/bash</span></div><div class="line">/usr/bin/mysqldump -umy_username -pmy_password -h192.168.1.xx --databases my_database &gt; /path/to/backup/dir/my_database.`date +<span class="string">'%Y%m%d%H%'</span>`.sql</div></pre></td></tr></table></figure></p>
<h2 id="启用并运行timer"><a href="#启用并运行timer" class="headerlink" title="启用并运行timer"></a>启用并运行timer</h2><p>命令行下运行如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl enable db_backup.timer</div><div class="line">systemctl start db_backup.timer</div></pre></td></tr></table></figure></p>
<p>计划任务执行后，即会在数据库备份的目录生成数据库备份文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;主要的Linux发行版都改用systemd 来替代 System V启动方式，其中 systemd timer 能替代 crontab 计划
    
    </summary>
    
    
      <category term="systemd" scheme="http://joelhy.github.io/tags/systemd/"/>
    
      <category term="crontab" scheme="http://joelhy.github.io/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title>GBK编码文件操作</title>
    <link href="http://joelhy.github.io/2015/06/08/gbk-related/"/>
    <id>http://joelhy.github.io/2015/06/08/gbk-related/</id>
    <published>2015-06-08T10:49:14.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍Linux上工作中针对GBK编码文件处理的相关工具使用技巧。</p>
<h2 id="Sublime-Text-自动加载GBK编码支持"><a href="#Sublime-Text-自动加载GBK编码支持" class="headerlink" title="Sublime Text 自动加载GBK编码支持"></a>Sublime Text 自动加载GBK编码支持</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>当使用ConvertToUTF8插件实现GBK编码支持时，每次打开一个GBK编码的文件前，Sublime Text都会提示一个编码选择框，例如：<br><img src="/img/sublime_text_show_selection.jpg" alt="Sublime Text 编码选择框"><br>当需要打开的GBK编码文件很多时，每次都要选择编码就会影响效率及打断思维，因此最好能够直接识别成GBK编码而不需要选择。</p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>打开<code>~/.config/sublime-text-3/Packages/ConvertToUTF8/ConvertToUTF8.py</code>文件，注释掉<code>def check_encoding(view, encoding, confidence):</code>中的：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">if</span> not_detected:</div><div class="line">        <span class="comment"># using encoding detected by ST</span></div><div class="line">        encoding = view_encoding</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        show_selection(view, [</div><div class="line">            [<span class="string">'&#123;0&#125; (&#123;1:.0%&#125;)'</span>.format(encoding, confidence), encoding],</div><div class="line">            [<span class="string">'&#123;0&#125;'</span>.format(view_encoding), view_encoding]</div><div class="line">        ])</div><div class="line">        <span class="keyword">return</span></div></pre></td></tr></table></figure></p>
<p>即改成如下形式：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_encoding</span><span class="params">(view, encoding, confidence)</span>:</span></div><div class="line">    view_encoding = view.encoding()</div><div class="line">    result = <span class="string">'Detected &#123;0&#125; vs &#123;1&#125; with &#123;2:.0%&#125; confidence'</span>.format(encoding, view_encoding, confidence) <span class="keyword">if</span> encoding <span class="keyword">else</span> <span class="string">'Encoding can not be detected'</span></div><div class="line">    view.set_status(<span class="string">'origin_encoding'</span>, result)</div><div class="line">    print(result)</div><div class="line">    not_detected = <span class="keyword">not</span> encoding <span class="keyword">or</span> confidence &lt; <span class="number">0.95</span> <span class="keyword">or</span> encoding == view_encoding</div><div class="line">    <span class="comment"># ST can't detect the encoding</span></div><div class="line">    <span class="keyword">if</span> view_encoding <span class="keyword">in</span> (<span class="string">'Undefined'</span>, view.settings().get(<span class="string">'fallback_encoding'</span>)):</div><div class="line">        <span class="keyword">if</span> not_detected:</div><div class="line">            show_selection(view)</div><div class="line">            <span class="keyword">return</span></div><div class="line">    <span class="comment">#else:</span></div><div class="line">        <span class="comment">#if not_detected:</span></div><div class="line">            <span class="comment"># using encoding detected by ST</span></div><div class="line">            <span class="comment">#encoding = view_encoding</span></div><div class="line">        <span class="comment">#else:</span></div><div class="line">            <span class="comment">#show_selection(view, [</span></div><div class="line">                <span class="comment">#['&#123;0&#125; (&#123;1:.0%&#125;)'.format(encoding, confidence), encoding],</span></div><div class="line">                <span class="comment">#['&#123;0&#125;'.format(view_encoding), view_encoding]</span></div><div class="line">            <span class="comment">#])</span></div><div class="line">            <span class="comment">#return</span></div><div class="line">    init_encoding_vars(view, encoding)</div></pre></td></tr></table></figure></p>
<p>这样每次打开GBK编码就会自动识别，而不用手动选择编码了。</p>
<h2 id="系统编码为UTF-8时的GBK文件搜索"><a href="#系统编码为UTF-8时的GBK文件搜索" class="headerlink" title="系统编码为UTF-8时的GBK文件搜索"></a>系统编码为UTF-8时的GBK文件搜索</h2><p>当操作系统的locale为UTF-8时，此时不能用grep, ack等直接搜索GBK编码的文件。</p>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>在模拟终端(Konsole, GNOME Terminal)下执行<code>export LC_CTYPE=&quot;zh_CN.GBK&quot;</code>，并把终端的编码设置为’GBK’，例如下图在Konsole中设置编码：<br><img src="/img/konsole_select_encoding.jpg" alt="选择Konsole编码"></p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>以 LC_ALL=zh_CN.GBK konsole  方式 打开模拟终端。</p>
<h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>基于 qt5 版的 konsole 不支持方法二的方式，需改成如下方式：</p>
<ol>
<li>新建profile，并把配置中的默认编码改成 gbk</li>
<li>运行命令：<code>LC_CTYPE=&quot;zh_CN.GBK&quot; konsole --profile gbk</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/bash</div><div class="line">#LC_ALL=zh_CN.GB18030 konsole -e &quot;/usr/bin/bash&quot;</div><div class="line">LC_CTYPE=&quot;zh_CN.GBK&quot; konsole --profile gbk -e &quot;/usr/bin/bash&quot;</div><div class="line">#LC_CTYPE=&quot;zh_CN.GBK&quot; konsole --profile gbk</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="qgit-显示GBK编码文件差异时乱码"><a href="#qgit-显示GBK编码文件差异时乱码" class="headerlink" title="qgit 显示GBK编码文件差异时乱码"></a>qgit 显示GBK编码文件差异时乱码</h2><p>在命令行下切换到项目的根目录执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cat &gt; .git/config &lt;&lt; EOF</div><div class="line">[i18n]</div><div class="line">    commitencoding = GB18030</div><div class="line">    logoutputencoding = GB18030</div><div class="line">EOF</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍Linux上工作中针对GBK编码文件处理的相关工具使用技巧。&lt;/p&gt;
&lt;h2 id=&quot;Sublime-Text-自动加载GBK编码支持&quot;&gt;&lt;a href=&quot;#Sublime-Text-自动加载GBK编码支持&quot; class=&quot;headerlink&quot; title=&quot;Su
    
    </summary>
    
    
      <category term="GBK" scheme="http://joelhy.github.io/tags/GBK/"/>
    
  </entry>
  
  <entry>
    <title>编译PHP 5.4.39</title>
    <link href="http://joelhy.github.io/2015/03/25/compile-php54/"/>
    <id>http://joelhy.github.io/2015/03/25/compile-php54/</id>
    <published>2015-03-25T00:37:18.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍在Arch Linux上编译安装PHP 5.4.39。</p>
<h2 id="下载PHP源码"><a href="#下载PHP源码" class="headerlink" title="下载PHP源码"></a>下载PHP源码</h2><p>从官网<a href="http://www.php.net/downloads.php" target="_blank" rel="external">http://www.php.net/downloads.php</a>选择要下载的源码，推荐从国内镜像<a href="http://cn2.php.net/get/php-5.4.39.tar.bz2/from/this/mirror" target="_blank" rel="external">http://cn2.php.net/get/php-5.4.39.tar.bz2/from/this/mirror</a>下载。</p>
<h2 id="安装依赖的软件包"><a href="#安装依赖的软件包" class="headerlink" title="安装依赖的软件包"></a>安装依赖的软件包</h2><p>本次编译有安装mcrypt扩展，而mcrypt需要依赖libmcrypt，故需要安装相应软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -S libmcrypt</div></pre></td></tr></table></figure></p>
<h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><h3 id="作为apache运行模块编译安装"><a href="#作为apache运行模块编译安装" class="headerlink" title="作为apache运行模块编译安装"></a>作为apache运行模块编译安装</h3><p>在root帐号下执行如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar xvf php-5.4.39.tar.bz2</div><div class="line">cd php-5.4.39</div><div class="line">./configure --prefix=/usr/local/php-5.4.39 --with-layout=GNU --with-config-file-path=/usr/local/php-5.4.39/etc/ --with-config-file-scan-dir=/usr/local/php-5.4.39/etc/conf.d --disable-rpath --mandir=/usr/local/php-5.4.39/man --with-apxs2 --enable-bcmath=shared --enable-calendar=shared --enable-ftp=shared --enable-gd-native-ttf --enable-intl=shared --enable-mbstring --enable-soap=shared --enable-sockets=shared --enable-zip=shared --with-bz2=shared --with-curl --with-freetype-dir=/usr --with-gd --with-jpeg-dir=/usr --with-mcrypt=shared --with-mysql-sock=/var/run/mysqld/mysqld.sock --with-mysql=shared,mysqlnd --with-mysqli=shared,mysqlnd --with-openssl=shared --with-pdo-mysql=shared,mysqlnd --with-png-dir=/usr --with-zlib --with-readline --with-curl=shared --with-iconv=shared --with-gettext=shared</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure></p>
<p>编译安装程序会自动往httpd的modules目录（Arch Linux下是/usr/lib/httpd/modules）拷贝进文件libphp5.so，并往httpd配置文件(/etc/httpd/httpd/conf)写入一行： <code>LoadModule php5_module modules/libphp5.so</code></p>
<h3 id="安装成PHP-FPM"><a href="#安装成PHP-FPM" class="headerlink" title="安装成PHP-FPM"></a>安装成PHP-FPM</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar xvf php-5.4.39.tar.bz2</div><div class="line">cd php-5.4.39</div><div class="line">./configure --prefix=/usr/local/php-5.4.39_fpm --with-layout=GNU --with-config-file-path=/usr/local/php-5.4.39_fpm/etc/ --with-config-file-scan-dir=/usr/local/php-5.4.39_fpm/etc/conf.d --disable-rpath --mandir=/usr/local/php-5.4.39_fpm/man --enable-bcmath=shared --enable-calendar=shared --enable-ftp=shared --enable-gd-native-ttf --enable-intl=shared --enable-mbstring --enable-soap=shared --enable-sockets=shared --enable-zip=shared --with-bz2=shared --with-curl --with-freetype-dir=/usr --with-gd --with-jpeg-dir=/usr --with-mcrypt=shared --with-mysql-sock=/var/run/mysqld/mysqld.sock --with-mysql=shared,mysqlnd --with-mysqli=shared,mysqlnd --with-openssl=shared --with-pdo-mysql=shared,mysqlnd --with-png-dir=/usr --with-zlib --with-readline --with-curl=shared --with-iconv=shared --with-gettext=shared --enable-fpm</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍在Arch Linux上编译安装PHP 5.4.39。&lt;/p&gt;
&lt;h2 id=&quot;下载PHP源码&quot;&gt;&lt;a href=&quot;#下载PHP源码&quot; class=&quot;headerlink&quot; title=&quot;下载PHP源码&quot;&gt;&lt;/a&gt;下载PHP源码&lt;/h2&gt;&lt;p&gt;从官网&lt;a href=
    
    </summary>
    
    
      <category term="PHP" scheme="http://joelhy.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Arch Linux 搭建 LNMP 环境</title>
    <link href="http://joelhy.github.io/2015/03/16/archlinux-lnmp/"/>
    <id>http://joelhy.github.io/2015/03/16/archlinux-lnmp/</id>
    <published>2015-03-16T08:21:58.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -S nginx mariadb php php-fpm php-pear</div></pre></td></tr></table></figure>
<h2 id="配置php-fpm"><a href="#配置php-fpm" class="headerlink" title="配置php-fpm"></a>配置php-fpm</h2><p>编辑 /etc/php/php-fpm.conf</p>
<ul>
<li>启用error_log：把 <code>;error_log = log/php-fpm.log</code>改成<code>error_log = log/php-fpm.log</code></li>
<li>把user, group 参数改成与nginx的一致，以避免权限问题，例如：<br>  user = joelhy<br>  group = joelhy</li>
<li>改成在9000端口监听：<br>  listen = 127.0.0.1:9000<br>  ;listen = /run/php-fpm/php-fpm.sock</li>
</ul>
<h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><h3 id="创建配置目录"><a href="#创建配置目录" class="headerlink" title="创建配置目录"></a>创建配置目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /etc/nginx</div><div class="line">mkdir conf.d sites-available sites-enabled</div></pre></td></tr></table></figure>
<h3 id="修改nginx-conf"><a href="#修改nginx-conf" class="headerlink" title="修改nginx.conf"></a>修改nginx.conf</h3><p>假定nginx以普通帐号joelhy运行<br><code>#user html;</code>改成<code>user joelhy joelhy;</code><br><code>#error_log  logs/error.log  info;</code>改成<code>error_log  /var/log/nginx/error.log  info;</code><br>在 http{…}块最后添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">include /etc/nginx/conf.d/*.conf;</div><div class="line">include /etc/nginx/sites-enabled/*;</div></pre></td></tr></table></figure></p>
<p>在sites-available目录创建虚拟主机配置文件，如需启用虚拟主机，则把sites-available中的链接到sites-enabled。<br>例如在sites-available目录里创建文件demo.conf，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 8001;</div><div class="line">    root /home/joelhy/workspace/demo;</div><div class="line">    index index.html index.html;</div><div class="line"></div><div class="line">    server_name demo.dev;</div><div class="line"></div><div class="line">    #location / &#123;</div><div class="line">        #try_files $uri $uri/ /index.php;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">    location ~\.php$ &#123;</div><div class="line">        fastcgi_pass    127.0.0.1:9000;</div><div class="line">        fastcgi_index   index.php;</div><div class="line">        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;</div><div class="line">        include         fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>配置修改好后，使用<code>nginx -t</code>测试配置是否正常</p>
<h2 id="设置开机自动启动服务"><a href="#设置开机自动启动服务" class="headerlink" title="设置开机自动启动服务"></a>设置开机自动启动服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">systemctl enable nginx</div><div class="line">systemctl enable mysqld</div><div class="line">systemctl enable php-fpm</div><div class="line">systemctl start nginx</div><div class="line">systemctl start mysqld</div><div class="line">systemctl start php-fpm</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装软件包&quot;&gt;&lt;a href=&quot;#安装软件包&quot; class=&quot;headerlink&quot; title=&quot;安装软件包&quot;&gt;&lt;/a&gt;安装软件包&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
    
      <category term="ArchLinux" scheme="http://joelhy.github.io/tags/ArchLinux/"/>
    
  </entry>
  
  <entry>
    <title>Arch Linux 安装配置</title>
    <link href="http://joelhy.github.io/2015/03/13/archlinux-install-note/"/>
    <id>http://joelhy.github.io/2015/03/13/archlinux-install-note/</id>
    <published>2015-03-13T06:17:37.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录 Arch Linux 2015.03.01 的安装配置，方便自己重装系统时参考。</p>
<h2 id="下载ISO文件及制作安装U盘"><a href="#下载ISO文件及制作安装U盘" class="headerlink" title="下载ISO文件及制作安装U盘"></a>下载ISO文件及制作安装U盘</h2><h3 id="下载ISO文件"><a href="#下载ISO文件" class="headerlink" title="下载ISO文件"></a>下载ISO文件</h3><p>从 <a href="https://www.archlinux.org/download/" target="_blank" rel="external">https://www.archlinux.org/download/</a> 选择速度较快的下载镜像，通常只需选择<em>China</em>下面的，例如： <a href="http://mirrors.163.com/archlinux/iso/latest/" target="_blank" rel="external">163.com</a>。或者从社区维基上的镜像选择安装： <a href="https://wiki.archlinux.org/index.php/Mirrors_(简体中文)#.E4.B8.AD.E5.9B.BD" target="_blank" rel="external">https://wiki.archlinux.org/index.php/Mirrors_(简体中文)#.E4.B8.AD.E5.9B.BD</a>，例如：<a href="http://mirrors.aliyun.com/archlinux/iso/2015.03.01/" target="_blank" rel="external">阿里云</a>。 </p>
<h3 id="制作安装U盘"><a href="#制作安装U盘" class="headerlink" title="制作安装U盘"></a>制作安装U盘</h3><p>可参照 <a href="https://wiki.archlinux.org/index.php/USB_flash_installation_media" target="_blank" rel="external">https://wiki.archlinux.org/index.php/USB_flash_installation_media</a> 制作安装U盘，推荐采用<em>dd</em>命令制作安装U盘。<br>使用<em>dd</em>制作安装U盘的方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx &amp;&amp; sync</div></pre></td></tr></table></figure></p>
<p>用U盘的盘符代替 /dev/<strong>sdx</strong>，<strong>不</strong>用添加分区号，即<strong>不</strong>用键入类似 /dev/sdb<strong>1</strong> 的东西。</p>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>插入制作好的U盘启动盘，开始安装。<br>详细安装过程可参考官方文档 <a href="https://wiki.archlinux.org/index.php/Beginners%27_guide" target="_blank" rel="external">Beginners’ guide</a>。<br>在GRUB启动菜单中，推荐使用64位的版本，即选择<em>Boot Arch Linux (x86_64)</em>安装。</p>
<h3 id="更改BIOS启动顺序"><a href="#更改BIOS启动顺序" class="headerlink" title="更改BIOS启动顺序"></a>更改BIOS启动顺序</h3><p>台式机通常为按<em>Del</em>键，少部分为按<em>Esc</em>键进入BIOS；笔记本通常为<em>F2</em>，有的为<em>F10</em>或<em>F1</em>。具体使用哪个键进入BIOS，需要看开机时的提示。</p>
<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><p>启动过程中系统会自动启动<em>dhcpd</em>守护进程，如果网络是使用DHCP分配IP的，则此时就可以联网了，可用ping命令测试是否能连接外网：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping -c 3 www.baidu.com</div></pre></td></tr></table></figure></p>
<p>ping得通则说明网络连接正常，<strong>不</strong>用再进行下面的「有线网络配置」或「无线网络配置」操作。否则按照下面的设置，详细的各种网络配置说明见 <a href="https://wiki.archlinux.org/index.php/Network_configuration" target="_blank" rel="external">https://wiki.archlinux.org/index.php/Network_configuration</a>。</p>
<h4 id="查看网卡类型"><a href="#查看网卡类型" class="headerlink" title="查看网卡类型"></a>查看网卡类型</h4><p>使用<code>ip link</code>命令查看本机的网卡，lo为本地环路地址，enp开头的为有线网卡，wlp开头的为无线网卡。</p>
<h4 id="有线网络配置"><a href="#有线网络配置" class="headerlink" title="有线网络配置"></a>有线网络配置</h4><p>假设有线网卡在<code>ip link</code>中显示的网卡名为<em>enp0s3</em>，网管指定的网络信息如下：</p>
<ul>
<li>IP: 10.0.2.15</li>
<li>网关： 10.0.2.2</li>
<li>DNS: 114.114.114.114<br>则，按如下配置静态IP<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">systemctl stop dhcpcd.service</div><div class="line">ip link set enp0s3 up</div><div class="line">ip addr add 10.0.2.15/24 dev enp0s3</div><div class="line">ip route add default via 10.0.2.2</div><div class="line">echo &quot;nameserver 114.114.114.114&quot; &gt;&gt; /etc/resolv.conf</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="无线网络配置"><a href="#无线网络配置" class="headerlink" title="无线网络配置"></a>无线网络配置</h4><p>在命令行中执行<code>wifi-menu</code>命令，然后选择可用的无线网络并输入相应的密码即可。</p>
<h3 id="硬盘分区和格式化"><a href="#硬盘分区和格式化" class="headerlink" title="硬盘分区和格式化"></a>硬盘分区和格式化</h3><h4 id="查看现有磁盘分区"><a href="#查看现有磁盘分区" class="headerlink" title="查看现有磁盘分区"></a>查看现有磁盘分区</h4><p>使用<em>lsblk</em>可查看现有的磁盘分区</p>
<h4 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h4><p>使用<code>cfdisk</code>命令格式化硬盘分区<br>目前的硬盘通常都有500GB，推荐如下分区方案：<br>/       40G     sda1<br>/swap   4G      sda2<br>/home           sda3    剩下的都分给 /home 分区</p>
<h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><p>推荐采用<em>ext4</em>分区格式，操作命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkfs.ext4 /dev/sda1</div><div class="line">mkswap /dev/sda2</div><div class="line">swapon /dev/sda2</div><div class="line">mkfs.ext4 /dev/sda3</div><div class="line">lsblk -f</div></pre></td></tr></table></figure></p>
<h4 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h4><p>根分区<em>/</em>必须首先挂载，才能挂载其他分区，<em>/mnt</em>目录用于挂载分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount /dev/sda1 /mnt</div></pre></td></tr></table></figure></p>
<p>挂载<em>/home</em>分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/home</div><div class="line">mount /dev/sda3 /mnt/home</div></pre></td></tr></table></figure></p>
<h3 id="选择镜像服务器"><a href="#选择镜像服务器" class="headerlink" title="选择镜像服务器"></a>选择镜像服务器</h3><p>编辑 /etc/pacman.d/mirrorlist，建议保留5个<em>China</em>的镜像，其它的删除，最好不要只留一个镜像，不然万一那个镜像暂时不可用，就无法安装软件了。</p>
<h3 id="安装基本系统"><a href="#安装基本系统" class="headerlink" title="安装基本系统"></a>安装基本系统</h3><p>使用<em>pacstrap</em>安装基本系统<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacstrap /mnt base base-devel</div></pre></td></tr></table></figure></p>
<h3 id="生成fstab"><a href="#生成fstab" class="headerlink" title="生成fstab"></a>生成fstab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab</div><div class="line">vi /mnt/etc/fstab</div></pre></td></tr></table></figure>
<h3 id="chroot到新系统"><a href="#chroot到新系统" class="headerlink" title="chroot到新系统"></a>chroot到新系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arch-chroot /mnt /bin/bash</div></pre></td></tr></table></figure>
<h3 id="配置locale"><a href="#配置locale" class="headerlink" title="配置locale"></a>配置locale</h3><p><code>vi /etc/locale.gen</code>，保留<code>en_US.UTF-8 UTF-8</code>和<code>zh_CN.UTF-8 UTF-8</code>处于非注释状态，保存文件退出。<br>运行<code>locale-gen</code>重新生成locale。<br>设置locale：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo LANG=en_US.UTF-8 &gt; /etc/locale.conf</div><div class="line">echo LC_CTYPE=zh_CN.UTF-8 &gt;&gt; /etc/locale.conf</div></pre></td></tr></table></figure></p>
<h3 id="配置时区"><a href="#配置时区" class="headerlink" title="配置时区"></a>配置时区</h3><p><code>ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></p>
<h3 id="配置硬件时间"><a href="#配置硬件时间" class="headerlink" title="配置硬件时间"></a>配置硬件时间</h3><p><code>hwclock --systohc --utc</code></p>
<h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><p><code>echo arminix &gt; /etc/hostname</code><br>并把主机名加到 /etc/hosts中，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#&lt;ip-address&gt;   &lt;hostname.domain.org&gt;   &lt;hostname&gt;</div><div class="line">127.0.0.1       localhost.localdomain   localhost arminix</div><div class="line">::1             localhost.localdomain   localhost</div></pre></td></tr></table></figure></p>
<h3 id="配置网络-1"><a href="#配置网络-1" class="headerlink" title="配置网络"></a>配置网络</h3><p><code>cd /etc/netctl</code><br>有线静态IP网络使用：<code>cp examples/ethernet-static my_network</code><br>有线DHCPD配置的使用：<code>cp examples/ethernet-dhcp my_network</code><br>无线网络使用：<code>cp examples/wireless-wpa my_network</code><br>根据实际情况修改 my_network 文件的内容<br>启用配置：<code>netctl enable my_network</code></p>
<h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">passwd</div></pre></td></tr></table></figure>
<h3 id="安装配置引导程序"><a href="#安装配置引导程序" class="headerlink" title="安装配置引导程序"></a>安装配置引导程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pacman -S grub</div><div class="line">pacman -S os-prober  ## 如果本机有安装其它操作系统</div><div class="line">grub-install --target=i386-pc --recheck /dev/sda</div><div class="line">grub-mkconfig -o /boot/grub/grub.cfg</div></pre></td></tr></table></figure>
<h3 id="卸载分区并重启"><a href="#卸载分区并重启" class="headerlink" title="卸载分区并重启"></a>卸载分区并重启</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">exit</div><div class="line">reboot</div></pre></td></tr></table></figure>
<h3 id="pacman配置"><a href="#pacman配置" class="headerlink" title="pacman配置"></a>pacman配置</h3><ul>
<li>pacman显示彩色输出<br>编辑 /etc/pacman.conf，取消第34行Color前的井号“#”。</li>
<li>更改mirror list<br>编辑 /etc/pacman.d/mirrorlist，保留<em>China</em>部分的即可，<strong>非</strong>教育网的推荐使用以下这两个镜像：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Server = http://mirrors.163.com/archlinux/$repo/os/$arch</div><div class="line">Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -Syu</div></pre></td></tr></table></figure>
<h2 id="安装图形用户界面及常用软件"><a href="#安装图形用户界面及常用软件" class="headerlink" title="安装图形用户界面及常用软件"></a>安装图形用户界面及常用软件</h2><h3 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h3><p>查看显卡类型：<code>lspci | grep VGA</code><br>安装默认显卡驱动：<code>pacman -S xf86-video-vesa</code><br>根据显卡类型安装相应的驱动，查看仓库里的驱动程序用<code>pacman -Ss xf86-video</code></p>
<ul>
<li>AMD: <code>pacman -S xf86-video-ati</code></li>
<li>Intel: <code>pacman -S xf86-video-intel</code></li>
<li>Nvidia: <code>pacman -S xf86-video-nouveau</code></li>
<li>Virtualbox虚拟机: <code>pacman -S virtualbox-guest-utils</code></li>
</ul>
<h3 id="安装Xorg"><a href="#安装Xorg" class="headerlink" title="安装Xorg"></a>安装Xorg</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pacman -S xorg-server </div><div class="line">pacman -S xorg-xinit xorg-twm xterm xorg-xclock</div><div class="line">startx  ## 测试Xorg是否可启动</div></pre></td></tr></table></figure>
<h3 id="配置声音"><a href="#配置声音" class="headerlink" title="配置声音"></a>配置声音</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pacman -S alsa-utils </div><div class="line">amixer sset Master unmute  # 取消静音</div></pre></td></tr></table></figure>
<h3 id="添加普通帐号"><a href="#添加普通帐号" class="headerlink" title="添加普通帐号"></a>添加普通帐号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">useradd -m -G wheel -s /bin/bash joelhy </div><div class="line">passwd joelhy</div></pre></td></tr></table></figure>
<h3 id="最小化安装KDE"><a href="#最小化安装KDE" class="headerlink" title="最小化安装KDE"></a>最小化安装KDE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pacman -S kdebase-workspace </div><div class="line">systemctl enable kdm.service  # 启用KDM</div><div class="line">systemctl start kdm.service  # 启动KDM</div></pre></td></tr></table></figure>
<h3 id="或者安装-LXQt"><a href="#或者安装-LXQt" class="headerlink" title="或者安装 LXQt"></a>或者安装 LXQt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">pacman -S lxqt openbox</div><div class="line">#pacman -S oxygen-icons qtcurve</div><div class="line">#pacman -S oxygen systemsettings</div><div class="line">pacman -S oxygen-icons kwin</div><div class="line">#pacman -S oxygen-icons xfwm4</div><div class="line">pacman -S xscreensaver</div><div class="line">pacman -S numlockx</div><div class="line">numlockx on</div><div class="line">pacman -S sddm</div><div class="line">systemctl enable sddm.service</div><div class="line">systemctl start sddm.service</div></pre></td></tr></table></figure>
<p>使用sddm登录进LXQT，此时桌面显示是异常的，点击左下角的按钮，选择<em>Preferences-&gt;LXQt settings-&gt;Appearance</em>，然后点击<em>LXQt Theme</em>图标，选择一个主题，推荐<em>Frost</em>主题，点击完成后桌面即会变成正常的。<br>点击LXQt里左下角的按钮，选择<em>Preferences-&gt;LXQt settings-&gt;Shortcut Keys</em>，新增一个快捷键<em>Control+Alt_L</em>，命令设为『xscreensaver-command –lock」。</p>
<h4 id="改用kwin窗口管理器"><a href="#改用kwin窗口管理器" class="headerlink" title="改用kwin窗口管理器"></a>改用kwin窗口管理器</h4><p>点击LXQt里左下角的按钮，选择<em>Preferences-&gt;LXQt settings-&gt;Session Settings</em>， 把<em>Window Manager</em>下拉框选中的<em>openbox</em>改成<em>kwin_x11</em>。<br><del>点击LXQt里左下角的按钮，选择<em>Preferences-&gt;LXQt settings-&gt;Session Settings</em>， 把<em>Window Manager</em>下拉框选中的<em>openbox</em>改成<em>xfwm4</em>。</del></p>
<h3 id="添加archlinuxfr源并安装yaourt"><a href="#添加archlinuxfr源并安装yaourt" class="headerlink" title="添加archlinuxfr源并安装yaourt"></a>添加archlinuxfr源并安装yaourt</h3><p>编辑 /etc/pacman.conf，把<em>SigLevel</em>改成<code>Optional TrustAll</code>，并在文件末尾加入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[archlinuxfr]</div><div class="line">Server = http://repo-fr.archlinuxcn.org/$arch</div></pre></td></tr></table></figure></p>
<p>安装yaourt：<code>pacman -Sy yaourt</code></p>
<h3 id="添加中文社区仓库"><a href="#添加中文社区仓库" class="headerlink" title="添加中文社区仓库"></a>添加中文社区仓库</h3><p>编辑 /etc/pacman.conf，在文件末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[archlinuxcn]</div><div class="line">SigLevel = Optional TrustAll</div><div class="line">Server = http://repo.archlinuxcn.org/$arch</div></pre></td></tr></table></figure></p>
<p>添加GPG密钥：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -Syy &amp;&amp; pacman -S archlinuxcn-keyring</div></pre></td></tr></table></figure></p>
<h3 id="配置字体"><a href="#配置字体" class="headerlink" title="配置字体"></a>配置字体</h3><p>创建目录<code>/usr/share/fonts/truetype</code>，并复制msyh.ttf，msyhbd.ttf，yahei_mono.ttf到该目录<br>然后运行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkfontscale</div><div class="line">mkfontdir</div><div class="line">fc-cache -fv</div></pre></td></tr></table></figure></p>
<h3 id="安装配置fcitx输入法"><a href="#安装配置fcitx输入法" class="headerlink" title="安装配置fcitx输入法"></a>安装配置fcitx输入法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># pacman -S fcitx-im fcitx-qt5 fcitx-rime</div><div class="line">pacman -S fcitx-gtk2 fcitx-qt4 fcitx-qt5 fcitx-sunpinyin</div><div class="line">yaourt -S fcitx-sogoupinyin</div></pre></td></tr></table></figure>
<p>往<em>/home/joelhy/.xprofile</em>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export GTK_IM_MODULE=fcitx</div><div class="line">export QT_IM_MODULE=fcitx</div><div class="line">export XMODIFIERS=@im=fcitx</div><div class="line">fcitx -r --enable fcitx-qimpanel &amp;</div></pre></td></tr></table></figure></p>
<p>修改完退出KDE/LXQt，重新登录。</p>
<h3 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">pacman -S firefox flashplugin w3m</div><div class="line">pacman -S zsh openssh</div><div class="line">pacman -S vim ctags geany</div><div class="line">pacman -S unrar zip unzip p7zip </div><div class="line">pacman -S tree wget ntfs-3g</div><div class="line">#pacman -S lilyterm</div><div class="line">#pacman -S xfce4-terminal</div><div class="line">pacman -S konsole</div><div class="line">pacman -S dnsutils nmap</div><div class="line">pacman -S smplayer </div><div class="line">pacman -S archlinuxfr/downgrade</div><div class="line">pacman -S kchmviewer gpicview </div><div class="line">pacman -S the_silver_searcher</div><div class="line">pacman -S redshift enca</div><div class="line">pacman -S subversion git qgit meld</div><div class="line">pacman -S go nodejs</div><div class="line">pacman -S jdk7-openjdk</div><div class="line">pacman -S virtualbox virtualbox-host-modules virtualbox-guest-iso</div><div class="line">pacman -S archlinuxcn/ccal</div></pre></td></tr></table></figure>
<h3 id="安装KDE常用软件"><a href="#安装KDE常用软件" class="headerlink" title="安装KDE常用软件"></a>安装KDE常用软件</h3><p>如果是KDE环境，则安装以下常用软件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pacman -S kdesu4 kdegraphics-okular gwenview kdeartwork-kscreensaver </div><div class="line">pacman -S kdemultimedia-kmix kdegraphics-kcolorchooser kdegraphics-kolourpaint kdegraphics-ksnapshot</div><div class="line">pacman -S kdebase-dolphin kde-gtk-config oxygen-gtk2</div></pre></td></tr></table></figure></p>
<h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><h4 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;FirstName LastName&quot;</div><div class="line">git config --global user.email &quot;user@example.com&quot;</div><div class="line">git config --global color.ui &quot;auto&quot;</div><div class="line">git config --global core.filemode false</div><div class="line">git config --global core.quotepath false</div></pre></td></tr></table></figure>
<h4 id="gtk2程序使用oxygen主题"><a href="#gtk2程序使用oxygen主题" class="headerlink" title="gtk2程序使用oxygen主题"></a>gtk2程序使用oxygen主题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -S lxappearance oxygen-gtk2</div></pre></td></tr></table></figure>
<p>然后运行lxappearance，把默认的gtk主题改成oxygen。</p>
<h4 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h4><ul>
<li><p>更改默认SHELL为zsh<br>详细修改可参照官方文档：<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">https://github.com/robbyrussell/oh-my-zsh</a>，步骤概述如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</div><div class="line">chsh -s /bin/zsh</div></pre></td></tr></table></figure>
</li>
<li><p>配置zsh<br>添加以下内容到 /home/joelhy/.zshrc</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ZSH_THEME=&quot;tjkirch_mod&quot;</div><div class="line"></div><div class="line">alias cdd=&quot;cd /home/joelhy/Downloads&quot;</div><div class="line">alias cw=&quot;cd /home/joelhy/workspace&quot;</div><div class="line">alias cf=&quot;cd /home/joelhy/code/open_source/php/frameworks&quot;</div><div class="line"></div><div class="line">export NVM_DIR=&quot;/home/joelhy/.nvm&quot;</div><div class="line">export NVM_NODEJS_ORG_MIRROR=http://dist.u.qiniudn.com</div><div class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</div><div class="line"></div><div class="line">export GOPATH=/home/joelhy/mygo</div><div class="line">export PATH=&quot;$PATH:$GOPATH/bin&quot;</div><div class="line">export SYSTEMD_EDITOR=&quot;/usr/bin/vim&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="配置vim"><a href="#配置vim" class="headerlink" title="配置vim"></a>配置vim</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/joelhy/Vim.git .vim</div><div class="line">ln -s /home/joelhy/.vim/vimrc /home/joelhy/.vimrc</div><div class="line">cd ~/.vim/bundle</div><div class="line">git clone https://github.com/gmarik/Vundle.vim.git</div><div class="line">vim +PluginInstall +qall</div></pre></td></tr></table></figure>
<h4 id="geany"><a href="#geany" class="headerlink" title="geany"></a>geany</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /home/joelhy/.config/geany</div><div class="line">git clone https://github.com/codebrainz/geany-themes.git</div><div class="line">ln -s /home/joelhy/.config/geany/geany-themes/colorschemes /home/joelhy/.config/geany/colorschemes</div><div class="line">curl -O https://raw.githubusercontent.com/joelhy/geany_config/master/geany.conf</div><div class="line">curl -O https://raw.githubusercontent.com/joelhy/geany_config/master/keybindings.conf</div></pre></td></tr></table></figure>
<p>修改 <code>/home/joelhy/.config/geany/geany-themes/colorschemes/dark.conf</code> 把<code>default=#fff;#1e1e1e;false;false</code>改成<code>default=#00ff00;#1e1e1e;false;false</code>， 把<code>caret=#fff;#000;true;false</code>改成<code>caret=#fff;#000;false;false</code>。<br><del>打开geany，在<em>View -&gt; Change Color Scheme…</em>选择<em>Dark</em>。</del></p>
<h4 id="sublime-text"><a href="#sublime-text" class="headerlink" title="sublime text"></a>sublime text</h4><p>从<a href="http://pan.baidu.com/" target="_blank" rel="external">http://pan.baidu.com/</a>下载并解压到目录<em>/usr/local/</em><br>新建可执行文件<em>/usr/local/bin/s3</em>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"> </div><div class="line">SUBLIME_HOME=&quot;/usr/local/sublime_text_3&quot;</div><div class="line">LD_LIB=$SUBLIME_HOME/libsublime-imfix.so</div><div class="line">sh -c &quot;LD_PRELOAD=$LD_LIB $SUBLIME_HOME/sublime_text $@&quot;</div></pre></td></tr></table></figure></p>
<p>配置文件设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd ~/.config/sublime-text-3/Packages/User</div><div class="line">mv Preferences.sublime-settings&#123;,.`date +&apos;%Y%m%d&apos;`&#125;</div><div class="line">mv Default\ \(Linux\).sublime-keymap&#123;,.`date +&apos;%Y%m%d&apos;`&#125;</div><div class="line">curl -O https://raw.githubusercontent.com/joelhy/sublime_text_config/master/Preferences.sublime-settings</div><div class="line">curl -O https://raw.githubusercontent.com/joelhy/sublime_text_config/master/Default%20%28Linux%29.sublime-keymap</div></pre></td></tr></table></figure></p>
<p>按照<a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a>在sublime text 3里按`ctrl + ``，输入以下内容，安装Package Control：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import urllib.request,os,hashlib; h = &apos;eb2297e1a458f27d836c04bb0cbaf282&apos; + &apos;d0e7a3098092775ccb37ca9d6b2e4b7d&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)</div></pre></td></tr></table></figure></p>
<p>然后安装以下插件：</p>
<pre><code>Markdown Preview
DocBlockr
Emmet (Zen Coding)
jQuery
JsFormat
placeholders
ApplySyntax
JsMinifier
Sublime CodeIntel
Bracket Highlighter
GBK Encoding Support
ConvertToUTF8
Git
SidebarEnhancements
Theme Soda
GoSublime
</code></pre><h4 id="配置firefox"><a href="#配置firefox" class="headerlink" title="配置firefox"></a>配置firefox</h4><p>安装插件： Adblock Plus, AutoProxy, Charset SWitcher, Firebug, FireGestures, FirePHP, gooreplacer, Tab Mix Plus, Tree Style Tab, UnloadTab, Web Developer</p>
<h4 id="开机自启动Virtualbox"><a href="#开机自启动Virtualbox" class="headerlink" title="开机自启动Virtualbox"></a>开机自启动Virtualbox</h4><p>编辑 /etc/modules-load.d/virtualbox.conf 文件，添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vboxdrv</div><div class="line">vboxnetadp</div><div class="line">vboxnetflt</div><div class="line">vboxpci</div></pre></td></tr></table></figure></p>
<h4 id="安装配置LNMP"><a href="#安装配置LNMP" class="headerlink" title="安装配置LNMP"></a>安装配置LNMP</h4><p>详见 <a href="/2015/03/16/archlinux-lnmp/">Arch Linux 搭建 LNMP 环境</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录 Arch Linux 2015.03.01 的安装配置，方便自己重装系统时参考。&lt;/p&gt;
&lt;h2 id=&quot;下载ISO文件及制作安装U盘&quot;&gt;&lt;a href=&quot;#下载ISO文件及制作安装U盘&quot; class=&quot;headerlink&quot; title=&quot;下载ISO文件及制作安
    
    </summary>
    
    
      <category term="ArchLinux" scheme="http://joelhy.github.io/tags/ArchLinux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7上使用yum安装zabbix 2.4</title>
    <link href="http://joelhy.github.io/2015/02/26/install-zabbix-2-4-on-centOS-7-using-yum/"/>
    <id>http://joelhy.github.io/2015/02/26/install-zabbix-2-4-on-centOS-7-using-yum/</id>
    <published>2015-02-26T06:45:54.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum install mariadb-server mariadb</div><div class="line">systemctl enable mariadb.service</div><div class="line">systemctl start mariadb.service</div><div class="line">mysql_secure_installation</div><div class="line">firewall-cmd --permanent --zone=public --add-service=mysql</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h2 id="创建zabbix数据库及帐号"><a href="#创建zabbix数据库及帐号" class="headerlink" title="创建zabbix数据库及帐号"></a>创建zabbix数据库及帐号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[root@localhost create]# mysql -uroot -p</div><div class="line">Enter password: </div><div class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</div><div class="line">Your MariaDB connection id is 12</div><div class="line">Server version: 5.5.41-MariaDB MariaDB Server</div><div class="line"></div><div class="line">Copyright (c) 2000, 2014, Oracle, MariaDB Corporation Ab and others.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">MariaDB [(none)]&gt; create database zabbix character set utf8;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line"></div><div class="line">MariaDB [(none)]&gt; create database zabbix character set utf8;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to &apos;zabbix&apos;@&apos;localhost&apos; identified by &apos;zabbix&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>
<h2 id="添加zabbix仓库配置"><a href="#添加zabbix仓库配置" class="headerlink" title="添加zabbix仓库配置"></a>添加zabbix仓库配置</h2><p>rpm -ivh <a href="http://repo.zabbix.com/zabbix/2.4/rhel/7/x86_64/zabbix-release-2.4-1.el7.noarch.rpm" target="_blank" rel="external">http://repo.zabbix.com/zabbix/2.4/rhel/7/x86_64/zabbix-release-2.4-1.el7.noarch.rpm</a></p>
<h2 id="安装并启用zabbix-server"><a href="#安装并启用zabbix-server" class="headerlink" title="安装并启用zabbix server"></a>安装并启用zabbix server</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y zabbix-server-mysql zabbix-web-mysql</div></pre></td></tr></table></figure>
<h2 id="启用Apache-httpd"><a href="#启用Apache-httpd" class="headerlink" title="启用Apache httpd"></a>启用Apache httpd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">systemctl enable httpd.service</div><div class="line">systemctl start httpd.service</div><div class="line">firewall-cmd --permanent --zone=public --add-service=http</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h2 id="初始化zabbix数据库"><a href="#初始化zabbix数据库" class="headerlink" title="初始化zabbix数据库"></a>初始化zabbix数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd /usr/share/doc/zabbix-server-mysql-2.4.4/create</div><div class="line">mysql -uroot -pzabbix zabbix &lt; schema.sql</div><div class="line">mysql -uroot -pzabbix zabbix &lt; images.sql</div><div class="line">mysql -uroot -zabbixp zabbix &lt; data.sql</div></pre></td></tr></table></figure>
<h2 id="修改zabbix前端的PHP配置"><a href="#修改zabbix前端的PHP配置" class="headerlink" title="修改zabbix前端的PHP配置"></a>修改zabbix前端的PHP配置</h2><p>zabbix前端的Apache配置文件为/etc/httpd/conf.d/zabbix.conf。需要去掉<code># php_value date.timezone Europe/Riga</code>的井号<code>#</code>，并把<code>Europe/Riga</code>改成服务器所在的时区，例如<code>Asia/Shanghai</code>。修改完后重启Apache web服务器：<code>systemctl restart httpd</code></p>
<h2 id="修改zabbix配置文件"><a href="#修改zabbix配置文件" class="headerlink" title="修改zabbix配置文件"></a>修改zabbix配置文件</h2><p>按如下说明配置zabbix_server.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># vi /etc/zabbix/zabbix_server.conf</div><div class="line">DBHost=localhost</div><div class="line">DBName=zabbix</div><div class="line">DBUser=zabbix</div><div class="line">DBPassword=zabbix</div></pre></td></tr></table></figure></p>
<p>配置完重启zabbix server：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl stop zabbix-server</div><div class="line">systemctl start zabbix-server</div></pre></td></tr></table></figure></p>
<p>systemctl restart zabbix-server命令执行后，不能启动zabbix-server，故需要先stop再start zabbix-server。</p>
<h2 id="使用浏览器完成剩余配置"><a href="#使用浏览器完成剩余配置" class="headerlink" title="使用浏览器完成剩余配置"></a>使用浏览器完成剩余配置</h2><p>使用浏览器打开 <a href="http://server_ip/zabbix" target="_blank" rel="external">http://server_ip/zabbix</a>，其中server_ip要替换为服务器实际使用的IP地址，按照提示完成安装。安装完成后默认的用户名是：admin，密码是zabbix。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装MariaDB&quot;&gt;&lt;a href=&quot;#安装MariaDB&quot; class=&quot;headerlink&quot; title=&quot;安装MariaDB&quot;&gt;&lt;/a&gt;安装MariaDB&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
    
      <category term="CentOS" scheme="http://joelhy.github.io/tags/CentOS/"/>
    
      <category term="zabbix" scheme="http://joelhy.github.io/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>MySQL MHA高可用架构</title>
    <link href="http://joelhy.github.io/2015/02/06/mysql-mha/"/>
    <id>http://joelhy.github.io/2015/02/06/mysql-mha/</id>
    <published>2015-02-06T09:09:22.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>MHA for MySQL是MySQL的一个高可用方案，本文介绍MHA的安装配置。MHA分管理节点和数据库节点，支持一主多从、多主多从等配置，本文为一主多从方式，原理都相同，详见<a href="https://code.google.com/p/mysql-master-ha/wiki/UseCases" target="_blank" rel="external">官方文档</a>。可实现主库挂掉之后自动将一个从库提升为主库，并自动保持新主库和从库的一致性。</p>
<h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>操作系统都为CentOS 7 x86_64，数据库版本为MariaDB 10，<a href="https://fedoraproject.org/wiki/EPEL/zh-cn" target="_blank" rel="external">EPEL</a>已启用（有些依赖的软件包需要从EPEL软件仓库中下载）。 主从复制需要已经配置好。</p>
<p>服务器详情如下：<br>主库：192.168.71.151<br>从库1：192.168.71.152<br>从库2：192.168.71.153<br>管理节点：192.168.71.154</p>
<h2 id="安装MHA"><a href="#安装MHA" class="headerlink" title="安装MHA"></a>安装MHA</h2><p>MHA由MHA Manager和MHA Node两个软件包组成。MHA Manager运行在管理节点上，MHSA Node运行的每个数据库服务器上。MHA Node程序在需要的时候（配置检查、failover）时由MHA Manager调用。MHA Manger和MHA Node程序都是Perl语言写的。</p>
<h3 id="下载MHA-Node和MHA-Manager"><a href="#下载MHA-Node和MHA-Manager" class="headerlink" title="下载MHA Node和MHA Manager"></a>下载MHA Node和MHA Manager</h3><p>v0.56程序可从地址 <a href="https://code.google.com/p/mysql-master-ha/wiki/Downloads?tm=2" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/Downloads?tm=2</a> 页面里提供的下载地址下载，旧版程序可从地址 <a href="http://code.google.com/p/mysql-master-ha/downloads/list" target="_blank" rel="external">http://code.google.com/p/mysql-master-ha/downloads/list</a> 下载。本文以v0.56程序为例。官网只有使用于CentOS 5和CentOS 6的rpm包，没有提供适用于CentOS 7的rpm包，经测试适用于CentOS 6的rpm包在CentOS 7也可以安装成功。</p>
<h4 id="下载MHA-Manager"><a href="#下载MHA-Manager" class="headerlink" title="下载MHA Manager"></a>下载MHA Manager</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://www.mysql.gr.jp/frame/modules/bwiki/index.php\?plugin\=attach\&amp;pcmd\=open\&amp;file\=mha4mysql-manager-0.56-0.el6.noarch.rpm\&amp;refer\=matsunobu -o mha4mysql-manager-0.56-0.el6.noarch.rpm</div></pre></td></tr></table></figure>
<h4 id="下载MHA-Node"><a href="#下载MHA-Node" class="headerlink" title="下载MHA Node"></a>下载MHA Node</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://www.mysql.gr.jp/frame/modules/bwiki/index.php\?plugin\=attach\&amp;pcmd\=open\&amp;file\=mha4mysql-node-0.56-0.el6.noarch.rpm\&amp;refer\=matsunobu -o mha4mysql-node-0.56-0.el6.noarch.rpm</div></pre></td></tr></table></figure>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>MHA依赖一系列的软件包，MHA Node依赖软件包perl-DBD-MySQL，MHA Manager依赖perl-DBD-MySQL，perl-Config-Tiny，perl-Log-Dispatch，perl-Parallel-ForkManager。MHA Manager依赖MHA Node的一些模块，所以管理节点上也需要安装MHA Node。为自动安装MHA的依赖包，使用<code>yum localinstall</code>方式安装。<br>在所有的服务器上安装MHA Node：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum localinstall -y mha4mysql-node-0.56-0.el6.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>在管理节点(192.168.71.154)上安装MHA Manager：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum localinstall -y mha4mysql-manager-0.56-0.el6.noarch.rpm</div></pre></td></tr></table></figure></p>
<h2 id="SSH密钥登录方式设置"><a href="#SSH密钥登录方式设置" class="headerlink" title="SSH密钥登录方式设置"></a>SSH密钥登录方式设置</h2><p>MHA Manager内部使用SSH连接到各个MySQL服务器，最新从库节点上的MHA Node也需要使用SSH (scp)把relay log文件发给各个从库节点，故需要各台服务器见需要配置SSH密钥登录方式。</p>
<p>在服务器 192.168.71.151 上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.151</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.152</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.153</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.154</div></pre></td></tr></table></figure></p>
<p>在服务器 192.168.71.152 上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.151</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.152</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.153</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.154</div></pre></td></tr></table></figure></p>
<p>在服务器 192.168.71.153 上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.151</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.152</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.153</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.154</div></pre></td></tr></table></figure></p>
<p>在服务器 192.168.71.154 上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.151</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.152</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.153</div><div class="line">ssh-copy-id -i /root/id_rsa.pub root@192.168.71.154</div></pre></td></tr></table></figure></p>
<p>注意：<strong>MHA也是通过SSH方式登录本机操作的</strong>，故在本机上也需要执行ssh-copy-id，例如在 192.168.71.151 上也需要执行 <code>ssh-copy-id -i /root/id_rsa.pub root@192.168.71.151</code>。</p>
<h2 id="配置MHA管理节点"><a href="#配置MHA管理节点" class="headerlink" title="配置MHA管理节点"></a>配置MHA管理节点</h2><p>以下操作在管理节点 192.168.71.154。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mkdir -p /usr/local/mha</div><div class="line">mkdir -p /etc/mha</div><div class="line">cat &gt; /etc/mha/mha.conf &lt;&lt; EOF</div><div class="line">[server default]</div><div class="line"># mysql user and password</div><div class="line">user=joelhy</div><div class="line">password=root123</div><div class="line">ssh_user=root</div><div class="line"># working directory on the manager</div><div class="line">manager_workdir=/usr/local/mha</div><div class="line"># working directory on MySQL servers</div><div class="line">remote_workdir=/usr/local/mha</div><div class="line">repl_user=slave_user</div><div class="line">repl_password=bigs3cret</div><div class="line"></div><div class="line">[server1]</div><div class="line">hostname=192.168.71.151</div><div class="line"></div><div class="line">[server2]</div><div class="line">hostname=192.168.71.152</div><div class="line"></div><div class="line">[server3]</div><div class="line">hostname=192.168.71.153</div><div class="line">EOF</div></pre></td></tr></table></figure></p>
<p>repl_user帐号slave_user用于主从复制时，从库连接到主库复制数据，故有可能由从库上升为主库的都需要添加该帐号，<br>本文两个从库都作为failover时的主库候选，故除了当前主库需要 添加该帐号外，在这两个数据库节点上也需要创建slave_user帐号，即在所有的数据库节点的MariaDB shell上都需要执行如下语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; GRANT REPLICATION SLAVE ON *.* TO &apos;slave_user&apos;@&apos;192.168.71.%&apos; IDENTIFIED BY &apos;bigs3cret&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>其中<em>joelhy</em>是具有管理权限的帐号，当然可以不叫<em>joelhy</em>取做其他名称，例如foo，同理也需要在各个数据库上创建该帐号。在数据库节点192.168.71.151, 192.168.71.152, 192.168.71.153上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; GRANT ALL ON *.* TO joelhy@&apos;192.168.71.%&apos; IDENTIFIED BY &apos;root123&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<h2 id="测试节点间的SSH登录"><a href="#测试节点间的SSH登录" class="headerlink" title="测试节点间的SSH登录"></a>测试节点间的SSH登录</h2><p>在管理节点 192.168.71.154 上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# masterha_check_ssh  --conf=/etc/mha/mha.conf</div><div class="line">Fri Feb  6 19:51:30 2015 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</div><div class="line">Fri Feb  6 19:51:30 2015 - [info] Reading application default configuration from /etc/mha/mha.conf..</div><div class="line">Fri Feb  6 19:51:30 2015 - [info] Reading server configuration from /etc/mha/mha.conf..</div><div class="line">Fri Feb  6 19:51:30 2015 - [info] Starting SSH connection tests..</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug] </div><div class="line">Fri Feb  6 19:51:30 2015 - [debug]  Connecting via SSH from root@192.168.71.151(192.168.71.151:22) to root@192.168.71.152(192.168.71.152:22)..</div><div class="line">Fri Feb  6 19:51:30 2015 - [debug]   ok.</div><div class="line">Fri Feb  6 19:51:30 2015 - [debug]  Connecting via SSH from root@192.168.71.151(192.168.71.151:22) to root@192.168.71.153(192.168.71.153:22)..</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]   ok.</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug] </div><div class="line">Fri Feb  6 19:51:30 2015 - [debug]  Connecting via SSH from root@192.168.71.152(192.168.71.152:22) to root@192.168.71.151(192.168.71.151:22)..</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]   ok.</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]  Connecting via SSH from root@192.168.71.152(192.168.71.152:22) to root@192.168.71.153(192.168.71.153:22)..</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]   ok.</div><div class="line">Fri Feb  6 19:51:32 2015 - [debug] </div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]  Connecting via SSH from root@192.168.71.153(192.168.71.153:22) to root@192.168.71.151(192.168.71.151:22)..</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]   ok.</div><div class="line">Fri Feb  6 19:51:31 2015 - [debug]  Connecting via SSH from root@192.168.71.153(192.168.71.153:22) to root@192.168.71.152(192.168.71.152:22)..</div><div class="line">Fri Feb  6 19:51:32 2015 - [debug]   ok.</div><div class="line">Fri Feb  6 19:51:32 2015 - [info] All SSH connection tests passed successfully.</div></pre></td></tr></table></figure></p>
<p>反馈信息显示<code>All SSH connection tests passed successfully.</code>才是SSH登录配置正确，否则需要根据错误信息需要配置。</p>
<h2 id="检查候选主库的log-bin是否都启用"><a href="#检查候选主库的log-bin是否都启用" class="headerlink" title="检查候选主库的log-bin是否都启用"></a>检查候选主库的log-bin是否都启用</h2><p>如果当前的从库没有设置log-bin，很明显按照主从复制的要求，是不能作为新的主库的，所以作为候选主库的从库节点必须启用log-bin，本例中只有2个从库节点，且都打算作为候选主库，故都需要启用log-bin。</p>
<h2 id="检查复制过滤规则"><a href="#检查复制过滤规则" class="headerlink" title="检查复制过滤规则"></a>检查复制过滤规则</h2><p>MHA要求各个数据库节点的复制过滤规则(binlog-do-db, replicate-ignore-db)都一样。</p>
<h2 id="检查复制配置"><a href="#检查复制配置" class="headerlink" title="检查复制配置"></a>检查复制配置</h2><p>使用masterha_check_repl检查当前的MySQL集群拓扑结构是否符合MHA的要求。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# masterha_check_repl --conf=/etc/mha/mha.conf</div><div class="line">Fri Feb  6 20:16:18 2015 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Reading application default configuration from /etc/mha/mha.conf..</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Reading server configuration from /etc/mha/mha.conf..</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] MHA::MasterMonitor version 0.56.</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] GTID failover mode = 0</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Dead Servers:</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Alive Servers:</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]   192.168.71.151(192.168.71.151:3306)</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]   192.168.71.152(192.168.71.152:3306)</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]   192.168.71.153(192.168.71.153:3306)</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Alive Slaves:</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]   192.168.71.152(192.168.71.152:3306)  Version=10.0.16-MariaDB-log (oldest major version between slaves) log-bin:enabled</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]     Replicating from 192.168.71.151(192.168.71.151:3306)</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]   192.168.71.153(192.168.71.153:3306)  Version=10.0.16-MariaDB-log (oldest major version between slaves) log-bin:enabled</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]     Replicating from 192.168.71.151(192.168.71.151:3306)</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Current Alive Master: 192.168.71.151(192.168.71.151:3306)</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Checking slave configurations..</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]  read_only=1 is not set on slave 192.168.71.152(192.168.71.152:3306).</div><div class="line">Fri Feb  6 20:16:18 2015 - [warning]  relay_log_purge=0 is not set on slave 192.168.71.152(192.168.71.152:3306).</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]  read_only=1 is not set on slave 192.168.71.153(192.168.71.153:3306).</div><div class="line">Fri Feb  6 20:16:18 2015 - [warning]  relay_log_purge=0 is not set on slave 192.168.71.153(192.168.71.153:3306).</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Checking replication filtering settings..</div><div class="line">Fri Feb  6 20:16:18 2015 - [info]  binlog_do_db= , binlog_ignore_db= </div><div class="line">Fri Feb  6 20:16:18 2015 - [info]  Replication filtering check ok.</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] GTID (with auto-pos) is not supported</div><div class="line">Fri Feb  6 20:16:18 2015 - [info] Starting SSH connection tests..</div><div class="line">Fri Feb  6 20:16:20 2015 - [info] All SSH connection tests passed successfully.</div><div class="line">Fri Feb  6 20:16:20 2015 - [info] Checking MHA Node version..</div><div class="line">Fri Feb  6 20:16:20 2015 - [info]  Version check ok.</div><div class="line">Fri Feb  6 20:16:20 2015 - [info] Checking SSH publickey authentication settings on the current master..</div><div class="line">Fri Feb  6 20:16:20 2015 - [info] HealthCheck: SSH to 192.168.71.151 is reachable.</div><div class="line">Fri Feb  6 20:16:21 2015 - [info] Master MHA Node version is 0.56.</div><div class="line">Fri Feb  6 20:16:21 2015 - [info] Checking recovery script configurations on 192.168.71.151(192.168.71.151:3306)..</div><div class="line">Fri Feb  6 20:16:21 2015 - [info]   Executing command: save_binary_logs --command=test --start_pos=4 --binlog_dir=/var/lib/mysql,/var/log/mysql --output_file=/usr/local/mha/save_binary_logs_test --manager_version=0.56 --start_file=mysql-bin.000011 </div><div class="line">Fri Feb  6 20:16:21 2015 - [info]   Connecting to root@192.168.71.151(192.168.71.151:22).. </div><div class="line">  Creating /usr/local/mha if not exists..    ok.</div><div class="line">  Checking output directory is accessible or not..</div><div class="line">   ok.</div><div class="line">  Binlog found at /var/lib/mysql, up to mysql-bin.000011</div><div class="line">Fri Feb  6 20:16:21 2015 - [info] Binlog setting check done.</div><div class="line">Fri Feb  6 20:16:21 2015 - [info] Checking SSH publickey authentication and checking recovery script configurations on all alive slave servers..</div><div class="line">Fri Feb  6 20:16:21 2015 - [info]   Executing command : apply_diff_relay_logs --command=test --slave_user=&apos;joelhy&apos; --slave_host=192.168.71.152 --slave_ip=192.168.71.152 --slave_port=3306 --workdir=/usr/local/mha --target_version=10.0.16-MariaDB-log --manager_version=0.56 --relay_log_info=/var/lib/mysql/relay-log.info  --relay_dir=/var/lib/mysql/  --slave_pass=xxx</div><div class="line">Fri Feb  6 20:16:21 2015 - [info]   Connecting to root@192.168.71.152(192.168.71.152:22).. </div><div class="line">  Checking slave recovery environment settings..</div><div class="line">    Opening /var/lib/mysql/relay-log.info ... ok.</div><div class="line">    Relay log found at /var/lib/mysql, up to relay-bin.000002</div><div class="line">    Temporary relay log file is /var/lib/mysql/relay-bin.000002</div><div class="line">    Testing mysql connection and privileges.. done.</div><div class="line">    Testing mysqlbinlog output.. done.</div><div class="line">    Cleaning up test file(s).. done.</div><div class="line">Fri Feb  6 20:16:22 2015 - [info]   Executing command : apply_diff_relay_logs --command=test --slave_user=&apos;joelhy&apos; --slave_host=192.168.71.153 --slave_ip=192.168.71.153 --slave_port=3306 --workdir=/usr/local/mha --target_version=10.0.16-MariaDB-log --manager_version=0.56 --relay_log_info=/var/lib/mysql/relay-log.info  --relay_dir=/var/lib/mysql/  --slave_pass=xxx</div><div class="line">Fri Feb  6 20:16:22 2015 - [info]   Connecting to root@192.168.71.153(192.168.71.153:22).. </div><div class="line">  Checking slave recovery environment settings..</div><div class="line">    Opening /var/lib/mysql/relay-log.info ... ok.</div><div class="line">    Relay log found at /var/lib/mysql, up to relay-bin.000005</div><div class="line">    Temporary relay log file is /var/lib/mysql/relay-bin.000005</div><div class="line">    Testing mysql connection and privileges.. done.</div><div class="line">    Testing mysqlbinlog output.. done.</div><div class="line">    Cleaning up test file(s).. done.</div><div class="line">Fri Feb  6 20:16:23 2015 - [info] Slaves settings check done.</div><div class="line">Fri Feb  6 20:16:23 2015 - [info] </div><div class="line">192.168.71.151(192.168.71.151:3306) (current master)</div><div class="line"> +--192.168.71.152(192.168.71.152:3306)</div><div class="line"> +--192.168.71.153(192.168.71.153:3306)</div><div class="line"></div><div class="line">Fri Feb  6 20:16:23 2015 - [info] Checking replication health on 192.168.71.152..</div><div class="line">Fri Feb  6 20:16:23 2015 - [info]  ok.</div><div class="line">Fri Feb  6 20:16:23 2015 - [info] Checking replication health on 192.168.71.153..</div><div class="line">Fri Feb  6 20:16:23 2015 - [info]  ok.</div><div class="line">Fri Feb  6 20:16:23 2015 - [warning] master_ip_failover_script is not defined.</div><div class="line">Fri Feb  6 20:16:23 2015 - [warning] shutdown_script is not defined.</div><div class="line">Fri Feb  6 20:16:23 2015 - [info] Got exit code 0 (Not master dead).</div><div class="line"></div><div class="line">MySQL Replication Health is OK.</div></pre></td></tr></table></figure></p>
<p>注意最后一句为<code>MySQL Replication Health is OK.</code>，如果是<code>MySQL Replication Health is NOT OK!</code>，则需要根据反馈的错误信息修改配置。</p>
<h2 id="启动MHA-Manager"><a href="#启动MHA-Manager" class="headerlink" title="启动MHA Manager"></a>启动MHA Manager</h2><p>在管理节点 192.168.71.154 上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# nohup  masterha_manager  --conf=/etc/mha/mha.conf &amp;</div></pre></td></tr></table></figure></p>
<h2 id="停止MHA-Manager"><a href="#停止MHA-Manager" class="headerlink" title="停止MHA Manager"></a>停止MHA Manager</h2><p>如果需要停止MHA Mnager，可运行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# masterha_stop --conf=/etc/mha/mha.conf</div><div class="line">Stopped mha successfully.</div></pre></td></tr></table></figure></p>
<h2 id="测试failover"><a href="#测试failover" class="headerlink" title="测试failover"></a>测试failover</h2><p>可在MHA Manager管理节点运行MHA Manager时，测试failover。例如直接关闭主库的操作系统或者关闭主库的MySQL服务<br>在主库节点 192.168.71.151上关闭MySQL：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# service mysql stop</div><div class="line">Shutting down MySQL.. SUCCESS!</div></pre></td></tr></table></figure></p>
<p>注意此时管理节点的MHA Manager会有很长的输出，最后一句为<code>Master failover to 192.168.71.152(192.168.71.152:3306) completed successfully.</code>，说明主库已经failover到192.168.71.152从库节点了。<br>注意：<strong>MHA Manager在failover成功后会自动退出</strong>。出故障的原主库在配置更改完后，重新启用后，需要在管理节点上再次运行<code>masterha_check_ssh  --conf=/etc/mha/mha.conf</code>，没问题的话，再启动MHA Manager:<code>nohup  masterha_manager  --conf=/etc/mha/mha.conf &amp;</code>。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] <a href="https://code.google.com/p/mysql-master-ha/wiki/TableOfContents?tm=6" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/TableOfContents?tm=6</a><br>[2] <a href="http://ylw6006.blog.51cto.com/470441/1568853" target="_blank" rel="external">再谈Mysql MHA</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MHA for MySQL是MySQL的一个高可用方案，本文介绍MHA的安装配置。MHA分管理节点和数据库节点，支持一主多从、多主多从等配置，本文为一主多从方式，原理都相同，详见&lt;a href=&quot;https://code.google.com/p/mysql-master-
    
    </summary>
    
    
      <category term="MHA" scheme="http://joelhy.github.io/tags/MHA/"/>
    
  </entry>
  
  <entry>
    <title>MariaDB主从复制</title>
    <link href="http://joelhy.github.io/2015/02/06/mariadb-master-slave-replication/"/>
    <id>http://joelhy.github.io/2015/02/06/mariadb-master-slave-replication/</id>
    <published>2015-02-06T03:40:22.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>MariaDB主从复制允许在多个服务器上实现数据的异步复制，可有效提升数据库的负载能力，也是实现读写分离方案的基础，是一种常用的HA方案。</p>
<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><p>主库服务器：    192.168.71.151，CentOS 7，MariaDB 10已安装，无应用数据。<br>从库服务器1：   192.168.71.152，CentOS 7，MariaDB 10已安装，无应用数据。<br>从库服务器2：   192.168.71.153，CentOS 7，MariaDB 10已安装，无应用数据。<br>3个服务器的MariaDB都正常运行。<br>MariaDB 10服务器的常规安装配置可参照<a href="/2015/02/06/mariadb10-installation/">《MariaDB 10安装说明》</a>。</p>
<h2 id="各个服务器的共同配置"><a href="#各个服务器的共同配置" class="headerlink" title="各个服务器的共同配置"></a>各个服务器的共同配置</h2><p>以下操作在各个数据库服务器配置文件的<code>[mysqld]</code>部分下执行，数据库配置文件路径假定为 /etc/my.cnf 。<br>/etc/my.cnf 中有关于主从配置的一些说明，见my.cnf中<code># Replication Master Server (default)</code>和<code># Replication Slave (comment out master section to use this)</code>部分。<br>打开各个数据库服务器的配置文件 my.cnf</p>
<ol>
<li>检查确保各个服务器的<code>skip-networking</code>这行是注释掉的。主从复制需要数据库服务器使用IP监听的方式，不然使用UNIX socket方式监听，其他服务器访问不到。</li>
<li>把bind-address指定为各个服务器网卡的绑定IP上。即在配置文件的 <code>#skip-networking</code>行后面添加<code>bind-address=192.168.71.x</code>，在192.168.71.151上配置为<code>bind-address=192.168.71.151</code>，在192.168.71.152上配置为<code>bind-address=192.168.71.152</code>，在192.168.71.153上配置为<code>bind-address=192.168.71.153</code>。</li>
<li>配置server_id。server_id值为1到2的32次方-1的整数，每个服务器都需要添加server_id配置，各个服务器的server_id需要保证唯一性互不相同，实践中通常设置为服务器IP地址的最后一位，即分别设置为<code>server_id=151</code>，<code>server_id=152</code>，<code>server_id=153</code>。<br>上述配置完后调用<code>service mysql reload</code>重新加载配置文件。</li>
</ol>
<h2 id="配置-主服务器"><a href="#配置-主服务器" class="headerlink" title="配置 主服务器"></a>配置 主服务器</h2><p>以下操作在主服务器192.168.71.151的/etc/my.cnf上进行。</p>
<h3 id="确保log-bin是启用的"><a href="#确保log-bin是启用的" class="headerlink" title="确保log-bin是启用的"></a>确保<code>log-bin</code>是启用的</h3><p>即<code>log-bin=mysql-bin</code>是非注释状态的，log-bin没指定存储目录，则是默认datadir指向的目录，可登录MariaDB shell通过如下命令查看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; show variables like &apos;datadir&apos;;</div><div class="line">+---------------+-----------------+</div><div class="line">| Variable_name | Value           |</div><div class="line">+---------------+-----------------+</div><div class="line">| datadir       | /var/lib/mysql/ |</div><div class="line">+---------------+-----------------+</div></pre></td></tr></table></figure></p>
<h3 id="创建帐号并赋予replication的权限"><a href="#创建帐号并赋予replication的权限" class="headerlink" title="创建帐号并赋予replication的权限"></a>创建帐号并赋予replication的权限</h3><p>从库 从主库复制数据时需要使用这个帐号进行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; GRANT REPLICATION SLAVE ON *.* TO &apos;slave_user&apos;@&apos;192.168.71.%&apos; IDENTIFIED BY &apos;bigs3cret&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<h3 id="查看主库binary-log的文件位置"><a href="#查看主库binary-log的文件位置" class="headerlink" title="查看主库binary log的文件位置"></a>查看主库binary log的文件位置</h3><ul>
<li><p>主库锁表操作，不让数据库进行写入操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; FLUSH TABLES WITH READ LOCK;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>
</li>
<li><p>记录主库log文件及其当前位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; SHOW MASTER STATUS;</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</div><div class="line">+------------------+----------+--------------+------------------+</div><div class="line">| mysql-bin.000002 |      326 |              |                  |</div><div class="line">+------------------+----------+--------------+------------------+</div></pre></td></tr></table></figure>
</li>
</ul>
<p>记住File和Position的部分，后面会用到</p>
<ul>
<li>保持当前MariaDB shell终端处于打开状态<br>即保持主库处于锁定状态，如果关闭MariaDB shell会导致主库恢复非锁定状态</li>
<li>备份主库已有数据并导入从库<br>如果主库中有数据需要先备份并导入到从库中。使用新的终端窗口或终端模拟器Tab ssh登录192.168.71.151服务器，执行如下语句进行数据库备份操作<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# mysqldump -uroot -p --all-databases &gt; databases.sql</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="解锁-主库"><a href="#解锁-主库" class="headerlink" title="解锁 主库"></a>解锁 主库</h3><p>数据备份完成后，就可以释放主库上的锁：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; UNLOCK TABLES;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<h2 id="在-从服务器-上的操作"><a href="#在-从服务器-上的操作" class="headerlink" title="在 从服务器 上的操作"></a>在 从服务器 上的操作</h2><p>以下操作需要在从库192.168.71.152和192.168.71.153上<strong>都</strong>执行。</p>
<h3 id="导入备份的主库数据"><a href="#导入备份的主库数据" class="headerlink" title="导入备份的主库数据"></a>导入备份的主库数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# mysql -uroot -p &lt; databases.sql</div></pre></td></tr></table></figure>
<h3 id="设置relay-log"><a href="#设置relay-log" class="headerlink" title="设置relay-log"></a>设置relay-log</h3><p>my.cnf文件中添加一行<code>relay_log=relay-bin</code><br>如果不设置，默认是按主机名 + “-relay-bin”生成relay log。</p>
<h3 id="设置主从复制"><a href="#设置主从复制" class="headerlink" title="设置主从复制"></a>设置主从复制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; CHANGE MASTER TO MASTER_HOST=&apos;192.168.71.151&apos;,MASTER_USER=&apos;slave_user&apos;, MASTER_PASSWORD=&apos;bigs3cret&apos;, MASTER_LOG_FILE=&apos;mysql-bin.000002&apos;, MASTER_LOG_POS= 326;</div><div class="line">Query OK, 0 rows affected (0.24 sec)</div></pre></td></tr></table></figure>
<p>这个命令完成以下几个任务：</p>
<ol>
<li>设置当前服务器为192.168.71.151的从库</li>
<li>提供当前数据库(从库)从主库复制数据时所需的用户名和密码，即上面的<code>GRANT REPLICATION SLAVE ON *.* TO &#39;slave_user&#39;@&#39;192.168.71.%&#39; IDENTIFIED BY &#39;bigs3cret&#39;;</code>设置的</li>
<li>指定从库开始复制主库时需要使用的日志文件和文件位置，即上面主库执行<code>SHOW MASTER STATUS;</code>显示结果中的File和Position</li>
</ol>
<h3 id="开启主从复制"><a href="#开启主从复制" class="headerlink" title="开启主从复制"></a>开启主从复制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; START SLAVE;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>
<h3 id="查看从库状态"><a href="#查看从库状态" class="headerlink" title="查看从库状态"></a>查看从库状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; SHOW SLAVE STATUS\G</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State: Waiting for master to send event</div><div class="line">                  Master_Host: 192.168.71.151</div><div class="line">                  Master_User: slave_user</div><div class="line">                  Master_Port: 3306</div><div class="line">                Connect_Retry: 60</div><div class="line">              Master_Log_File: mysql-bin.000002</div><div class="line">          Read_Master_Log_Pos: 326</div><div class="line">               Relay_Log_File: relay-bin.000001</div><div class="line">                Relay_Log_Pos: 306</div><div class="line">        Relay_Master_Log_File: mysql-bin.000002</div><div class="line">             Slave_IO_Running: Yes</div><div class="line">            Slave_SQL_Running: Yes</div><div class="line">              Replicate_Do_DB: </div><div class="line">          Replicate_Ignore_DB: </div><div class="line">           Replicate_Do_Table: </div><div class="line">       Replicate_Ignore_Table: </div><div class="line">      Replicate_Wild_Do_Table: </div><div class="line">  Replicate_Wild_Ignore_Table: </div><div class="line">                   Last_Errno: 0</div><div class="line">                   Last_Error: </div><div class="line">                 Skip_Counter: 0</div><div class="line">          Exec_Master_Log_Pos: 565</div><div class="line">              Relay_Log_Space: 826</div><div class="line">              Until_Condition: None</div><div class="line">               Until_Log_File: </div><div class="line">                Until_Log_Pos: 0</div><div class="line">           Master_SSL_Allowed: No</div><div class="line">           Master_SSL_CA_File: </div><div class="line">           Master_SSL_CA_Path: </div><div class="line">              Master_SSL_Cert: </div><div class="line">            Master_SSL_Cipher: </div><div class="line">               Master_SSL_Key: </div><div class="line">        Seconds_Behind_Master: 0</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">                Last_IO_Errno: 0</div><div class="line">                Last_IO_Error: </div><div class="line">               Last_SQL_Errno: 0</div><div class="line">               Last_SQL_Error: </div><div class="line">  Replicate_Ignore_Server_Ids: </div><div class="line">             Master_Server_Id: 151</div><div class="line">               Master_SSL_Crl: </div><div class="line">           Master_SSL_Crlpath: </div><div class="line">                   Using_Gtid: No</div><div class="line">                  Gtid_IO_Pos: </div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>结果中<code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>必须为<code>Yes</code>，如果不是，需要根据提示的错误修改。</p>
<h2 id="测试主从复制是否正常"><a href="#测试主从复制是否正常" class="headerlink" title="测试主从复制是否正常"></a>测试主从复制是否正常</h2><p>在主库192.168.71.151的MariaDB shell上创建表或修改数据，看是否从库也跟着更新，如果跟着更新则说明正常。<br>例如，假定主库上有数据库 <em>newdatabase</em>，在主库上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; use newdatabase;</div><div class="line">Database changed</div><div class="line">MariaDB [newdatabase]&gt; create table test (id int unsigned auto_increment primary key);</div><div class="line">Query OK, 0 rows affected (1.07 sec)</div></pre></td></tr></table></figure></p>
<p>在每个从库上执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; use newdatabase;</div><div class="line">Database changed</div><div class="line">MariaDB [newdatabase]&gt; show tables;</div><div class="line">+-----------------------+</div><div class="line">| Tables_in_newdatabase |</div><div class="line">+-----------------------+</div><div class="line">| test                 |</div><div class="line">+-----------------------+</div><div class="line">1 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>如上则说明主从配置成功。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] <a href="https://mariadb.com/kb/en/mariadb/setting-up-replication/" target="_blank" rel="external">https://mariadb.com/kb/en/mariadb/setting-up-replication/</a><br>[2] <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-master-slave-replication-in-mysql" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-set-up-master-slave-replication-in-mysql</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MariaDB主从复制允许在多个服务器上实现数据的异步复制，可有效提升数据库的负载能力，也是实现读写分离方案的基础，是一种常用的HA方案。&lt;/p&gt;
&lt;h2 id=&quot;环境说明&quot;&gt;&lt;a href=&quot;#环境说明&quot; class=&quot;headerlink&quot; title=&quot;环境说明&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="MariaDB" scheme="http://joelhy.github.io/tags/MariaDB/"/>
    
  </entry>
  
  <entry>
    <title>MariaDB 10安装说明</title>
    <link href="http://joelhy.github.io/2015/02/06/mariadb10-installation/"/>
    <id>http://joelhy.github.io/2015/02/06/mariadb10-installation/</id>
    <published>2015-02-06T01:36:47.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于Sun公司被Oracle收购后，MySQL越来越走向封闭，<a href="http://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle#Impact" target="_blank" rel="external">对Sun公司原有的开源项目处置方式都让人担忧</a>，主流Linux发行版和大的组织机构、公司都转移到MariaDB上来，例如：<a href="http://en.wikipedia.org/wiki/MariaDB#Prominent_users" target="_blank" rel="external">Red Hat, Google, Wikipedia, Mozilla等</a>，<a href="https://mariadb.com/kb/en/mariadb/mariadb-vs-mysql-features/" target="_blank" rel="external">MariaDB相对MySQL也有很多改进</a>，<a href="https://mariadb.com/kb/en/mariadb/mariadb-vs-mysql-compatibility/" target="_blank" rel="external">对MySQL也是兼容的</a>，故推荐使用MariaDB。<br>本文介绍MariaDB 10在CentOS 7上的安装配置，MariaDB 5.5可直接通过yum安装：<code>yum install -y mariadb mariadb-server</code>。其他Linux发行版的安装可参照官方文档 <a href="https://downloads.mariadb.org/mariadb/repositories/" target="_blank" rel="external">https://downloads.mariadb.org/mariadb/repositories/</a>。</p>
<h2 id="添加MariaDB仓库"><a href="#添加MariaDB仓库" class="headerlink" title="添加MariaDB仓库"></a>添加MariaDB仓库</h2><p>参照官网的 <a href="https://downloads.mariadb.org/mariadb/repositories/" target="_blank" rel="external">https://downloads.mariadb.org/mariadb/repositories/</a> 设置MariaDB仓库源。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cat &gt; /etc/yum.repos.d/MariaDB10.repo &lt;&lt; EOF</div><div class="line"># MariaDB 10.0 CentOS repository list - created 2015-02-06 01:19 UTC</div><div class="line"># http://mariadb.org/mariadb/repositories/</div><div class="line">[mariadb]</div><div class="line">name = MariaDB</div><div class="line">baseurl = http://yum.mariadb.org/10.0/centos7-amd64</div><div class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</div><div class="line">gpgcheck=1</div><div class="line">EOF</div></pre></td></tr></table></figure></p>
<h2 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install MariaDB-server MariaDB-client</div></pre></td></tr></table></figure>
<p>如果安装过程报gpgkey错误，在确保没问题的情况下，可以把<code>gpgcheck=1</code>改为<code>gpgcheck=0</code>，禁用gpgkey校验。</p>
<h2 id="开放数据库端口"><a href="#开放数据库端口" class="headerlink" title="开放数据库端口"></a>开放数据库端口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public --add-service=mysql</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h2 id="MariaDB安全设置"><a href="#MariaDB安全设置" class="headerlink" title="MariaDB安全设置"></a>MariaDB安全设置</h2><p>运行 <code>mysql_secure_installation</code> 设置root用户密码、去除test数据库、禁止root帐号远程访问等。</p>
<h2 id="使用合适的配置文件"><a href="#使用合适的配置文件" class="headerlink" title="使用合适的配置文件"></a>使用合适的配置文件</h2><p>安装完成后在 /usr/share/mysql/ 目录下有几个MariaDB的示例配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cd /usr/share/mysql/</div><div class="line">[root@localhost mysql]# ls my-*</div><div class="line">my-huge.cnf  my-innodb-heavy-4G.cnf  my-large.cnf  my-medium.cnf  my-small.cnf</div></pre></td></tr></table></figure></p>
<p>huge, large, medium, small等主要是以服务器的内存大小划分，对应的服务器内存应该用哪个文件，可参看各个文件头的注释说明。如果只是偶尔使用且对数据库要求不高，用my-small.cnf配置文件就可以了。<br>安装CentOS 7最小的内存需求是406M，故系统至少有512M，本示例使用my-large.cnf为例。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp /etc/my.cnf&#123;,.`date +&apos;%Y%m%d&apos;`&#125;  # 备份原来的my.cnf文件</div><div class="line">cp /usr/share/mysql/my-large.cnf /etc/my.cnf</div></pre></td></tr></table></figure></p>
<h2 id="重新加载配置文件"><a href="#重新加载配置文件" class="headerlink" title="重新加载配置文件"></a>重新加载配置文件</h2><p>配置文件修改完后，需要重新加载配置文件，新的配置才能生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysql reload</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;由于Sun公司被Oracle收购后，MySQL越来越走向封闭，&lt;a href=&quot;http://en.wikipedia.org/wiki/S
    
    </summary>
    
    
      <category term="CentOS" scheme="http://joelhy.github.io/tags/CentOS/"/>
    
      <category term="MariaDB" scheme="http://joelhy.github.io/tags/MariaDB/"/>
    
  </entry>
  
  <entry>
    <title>Arch Linux上搭建Apache Storm</title>
    <link href="http://joelhy.github.io/2015/01/28/running-storm-on-archlinux/"/>
    <id>http://joelhy.github.io/2015/01/28/running-storm-on-archlinux/</id>
    <published>2015-01-28T06:17:42.000Z</published>
    <updated>2017-05-13T09:21:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Apache-Storm依赖的软件"><a href="#Apache-Storm依赖的软件" class="headerlink" title="Apache Storm依赖的软件"></a>Apache Storm依赖的软件</h2><ol>
<li>Java</li>
<li>Python 2.x</li>
<li>unzip</li>
<li>ZeroMQ</li>
<li>JZMQ</li>
<li>Apache ZooKeeper</li>
</ol>
<h2 id="安装OpenJDK"><a href="#安装OpenJDK" class="headerlink" title="安装OpenJDK"></a>安装OpenJDK</h2><p>Arch Linux需要设置JAVA_HOME<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pacman -S extra/jdk8-openjdk</div><div class="line">echo &quot;export JAVA_HOME=/usr/lib/jvm/java-8-openjdk&quot; &gt;&gt; /etc/profile.d/jre.sh</div></pre></td></tr></table></figure></p>
<h2 id="安装python2-unzip"><a href="#安装python2-unzip" class="headerlink" title="安装python2, unzip"></a>安装python2, unzip</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -S python2 unzip</div></pre></td></tr></table></figure>
<h2 id="安装编译工具"><a href="#安装编译工具" class="headerlink" title="安装编译工具"></a>安装编译工具</h2><p>Apache Storm 用到 ZeroMQ v2.1.7，而Arch Linux官方软件仓库中的是4.x版本，故ZeroMQ需要使用源码编译安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pacman -S gcc libtool pkg-config make autoconf git util-linux</div></pre></td></tr></table></figure></p>
<h2 id="编译安装ZeroMQ-JZMQ"><a href="#编译安装ZeroMQ-JZMQ" class="headerlink" title="编译安装ZeroMQ, JZMQ"></a>编译安装ZeroMQ, JZMQ</h2><h3 id="编译安装ZeroMQ"><a href="#编译安装ZeroMQ" class="headerlink" title="编译安装ZeroMQ"></a>编译安装ZeroMQ</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">curl -O http://download.zeromq.org/zeromq-2.1.7.tar.gz</div><div class="line">tar xzvf zeromq-2.1.7.tar.gz</div><div class="line">cd zeromq-2.1.7</div><div class="line">make</div><div class="line">make install</div><div class="line">ldconfig  # 更新LD_LIBRARY_PATH</div></pre></td></tr></table></figure>
<h3 id="编译安装JZMQ"><a href="#编译安装JZMQ" class="headerlink" title="编译安装JZMQ"></a>编译安装JZMQ</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/nathanmarz/jzmq.git</div><div class="line">cd jzmq</div><div class="line">./autogen.sh</div><div class="line">./configure --with-zeromq=/usr/local</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<p>make时可能会出错，解决办法是修改jzmq/src/Makefile.am,将classdist_noinst.stamp修改为classnoinst.stamp</p>
<p>验证libjzmq确实使用的zeromq是自行编译的版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ldd /usr/local/lib/libjzmq.so</div></pre></td></tr></table></figure></p>
<p>如果libzmq.so.1确实指向/usr/local/lib中的版本，则说明版本使用正确。</p>
<h3 id="安装Apache-ZooKeeper"><a href="#安装Apache-ZooKeeper" class="headerlink" title="安装Apache ZooKeeper"></a>安装Apache ZooKeeper</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yaourt -S zookeeper</div><div class="line">vi /usr/bin/zkServer.sh</div></pre></td></tr></table></figure>
<p>因为zookeeper只对IPv6地址进行监听，为了强制其只监听IPv4地址，需要修改 /usr/bin/zkServer.sh，在<code>nohup &quot;$JAVA&quot; &quot;-Dzookeeper.log.dir=${ZOO_LOG_DIR}&quot; &quot;-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}&quot; \</code>后添加一行:<br><code>&quot;-Djava.net.preferIPv4Stack=true&quot; \</code></p>
<p>启动Apache ZooKeeper<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/zkServer.sh start</div></pre></td></tr></table></figure></p>
<h2 id="安装Apache-Storm"><a href="#安装Apache-Storm" class="headerlink" title="安装Apache Storm"></a>安装Apache Storm</h2><h3 id="方法一：使用Arch-Linux-AUR仓库中的软件包"><a href="#方法一：使用Arch-Linux-AUR仓库中的软件包" class="headerlink" title="方法一：使用Arch Linux AUR仓库中的软件包"></a>方法一：使用Arch Linux AUR仓库中的软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yaourt -S storm</div><div class="line">systemctl start storm-nimbus.service</div><div class="line">systemctl start storm-supervisor.service</div><div class="line">systemctl start storm-ui.service</div></pre></td></tr></table></figure>
<h3 id="方法二：使用官方编译好的安装包"><a href="#方法二：使用官方编译好的安装包" class="headerlink" title="方法二：使用官方编译好的安装包"></a>方法二：使用官方编译好的安装包</h3><p>用浏览器打开 <a href="http://www.apache.org/dyn/closer.cgi/storm/apache-storm-0.9.3/apache-storm-0.9.3.tar.gz" target="_blank" rel="external">http://www.apache.org/dyn/closer.cgi/storm/apache-storm-0.9.3/apache-storm-0.9.3.tar.gz</a> 页面，从中选择一个镜像站下载软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl -O http://mirror.bit.edu.cn/apache/storm/apache-storm-0.9.3/apache-storm-0.9.3.tar.gz</div><div class="line">tar xzvf apache-storm-0.9.3.tar.gz</div><div class="line">cd apache-storm-0.9.3/bin</div></pre></td></tr></table></figure></p>
<p>使用konsole或gnome-terminal等终端模拟器，在不同的标签页分别执行<code>./storm nimbus</code>, <code>./storm supervisor</code>, <code>./storm ui</code></p>
<p>如果ui启动成功，可以使用浏览器来访问localhost:8080查看整个cluster的状况了</p>
<h2 id="部署Topology到cluster"><a href="#部署Topology到cluster" class="headerlink" title="部署Topology到cluster"></a>部署Topology到cluster</h2><p>以官方apache-storm-0.9.3.tar.gz中带的starter为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./storm jar ../examples/storm-starter/storm-starter-topologies-0.9.3.jar storm.starter.ExclamationTopology exclamationTopology</div></pre></td></tr></table></figure></p>
<p>一切顺利的话，可以看到输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1574 [main] INFO  backtype.storm.StormSubmitter - Finished submitting topology: exclamationTopology</div></pre></td></tr></table></figure></p>
<p>如果需要 kill 该 topology，则需要运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./storm kill exclamationTopology</div></pre></td></tr></table></figure></p>
<h2 id="使用PHP写Topology示例"><a href="#使用PHP写Topology示例" class="headerlink" title="使用PHP写Topology示例"></a>使用PHP写Topology示例</h2><p>本示例基于storm-starter的word count程序创建。<br><a href="/attach/motiondetect.tar.bz2">附件</a>是本示例的完整代码，代码目录结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">joelhy@arminix: /tmp $ tree motiondetect</div><div class="line">motiondetect</div><div class="line">├── multilang</div><div class="line">│   └── resources</div><div class="line">│       ├── RandomSentenceSpout.php</div><div class="line">│       ├── splitsentence.php</div><div class="line">│       └── storm.php</div><div class="line">├── pom.xml</div><div class="line">└── src</div><div class="line">    └── surveil</div><div class="line">        └── motiondetect</div><div class="line">            └── WordCountTopologyPhp.java</div><div class="line"></div><div class="line">5 directories, 5 files</div></pre></td></tr></table></figure></p>
<p>创建过程说明如下</p>
<h3 id="安装Apache-Storm到本地repository中"><a href="#安装Apache-Storm到本地repository中" class="headerlink" title="安装Apache Storm到本地repository中"></a>安装Apache Storm到本地repository中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pacman -S maven</div><div class="line">git clone git://github.com/apache/storm.git</div><div class="line">git checkout v0.9.3</div><div class="line">mvn install -DskipTests=true</div></pre></td></tr></table></figure>
<p>如果由于下载依赖关系失败等原因导致安装失败，可下载 <a href="http://pan.baidu.com/s/1qW6vylY" target="_blank" rel="external">http://pan.baidu.com/s/1qW6vylY</a> 中的软件包到~/.m2/repository目录中，再重试。</p>
<h3 id="基于storm-starter的pom-xml建立-pom-xml-文件"><a href="#基于storm-starter的pom-xml建立-pom-xml-文件" class="headerlink" title="基于storm-starter的pom.xml建立 pom.xml 文件"></a>基于storm-starter的pom.xml建立 pom.xml 文件</h3><p>其中groupId, artifactId, packaging, version, name 是需要修改的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;groupId&gt;com.example.surveil&lt;/groupId&gt;</div><div class="line">&lt;artifactId&gt;motiondetect&lt;/artifactId&gt;</div><div class="line">&lt;packaging&gt;jar&lt;/packaging&gt;</div><div class="line">&lt;version&gt;0.1&lt;/version&gt;</div><div class="line">&lt;name&gt;motiondetect&lt;/name&gt;</div></pre></td></tr></table></figure></p>
<h3 id="创建maven所需的目录结构"><a href="#创建maven所需的目录结构" class="headerlink" title="创建maven所需的目录结构"></a>创建maven所需的目录结构</h3><p>使用mkdir创建如下目录结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">joelhy@arminix: /tmp/motiondetect $ tree -d .</div><div class="line">.</div><div class="line">├── multilang</div><div class="line">│   └── resources</div><div class="line">└── src</div><div class="line">    └── surveil</div><div class="line">        └── motiondetect</div></pre></td></tr></table></figure></p>
<h3 id="引入storm的PHP支持类文件"><a href="#引入storm的PHP支持类文件" class="headerlink" title="引入storm的PHP支持类文件"></a>引入storm的PHP支持类文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd multilang/resources/</div><div class="line">curl -O https://raw.githubusercontent.com/Lazyshot/storm-php/master/lib/storm.php</div></pre></td></tr></table></figure>
<h3 id="实现业务逻辑"><a href="#实现业务逻辑" class="headerlink" title="实现业务逻辑"></a>实现业务逻辑</h3><p>仿照storm-starter下的nodejs版wordcount<br>在目录 multilang/resources/ 目录下创建文件RandomSentenceSpout.php, splitsentence.php<br>在目录 src/surveil/motiondetect/ 中创建文件WordCountTopologyPhp.java<br>文件的具体内容见附件</p>
<h3 id="编译代码"><a href="#编译代码" class="headerlink" title="编译代码"></a>编译代码</h3><p>在motiondetect目录下运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean install -DskipTests=true</div></pre></td></tr></table></figure></p>
<p>运行完后在motiondetect目录下会生成target目录，里面有编译相关的文件</p>
<h3 id="部署Topolgy"><a href="#部署Topolgy" class="headerlink" title="部署Topolgy"></a>部署Topolgy</h3><p>命令行下运行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">storm jar target/motiondetect-0.1-jar-with-dependencies.jar surveil.motiondetect.WordCountTopologyNode wc</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Apache-Storm依赖的软件&quot;&gt;&lt;a href=&quot;#Apache-Storm依赖的软件&quot; class=&quot;headerlink&quot; title=&quot;Apache Storm依赖的软件&quot;&gt;&lt;/a&gt;Apache Storm依赖的软件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Java
    
    </summary>
    
    
      <category term="Apache Storm" scheme="http://joelhy.github.io/tags/Apache-Storm/"/>
    
  </entry>
  
</feed>
